{"version":3,"sources":["node_modules/aos/dist/aos.js","../../src/js/constants/media.ts","../../src/js/constants/states.ts","../../src/js/utils/array/empty/empty.ts","../../src/js/utils/arrayLike/slice/slice.ts","../../src/js/utils/function/apply/apply.ts","../../src/js/utils/function/noop/noop.ts","../../src/js/utils/function/nextTick/nextTick.ts","../../src/js/utils/function/raf/raf.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/array/forEach/forEach.ts","../../src/js/utils/array/includes/includes.ts","../../src/js/utils/array/push/push.ts","../../src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/dom/before/before.ts","../../src/js/utils/dom/matches/matches.ts","../../src/js/utils/dom/children/children.ts","../../src/js/utils/dom/child/child.ts","../../src/js/utils/object/ownKeys/ownKeys.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/object/merge/merge.ts","../../src/js/utils/object/omit/omit.ts","../../src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/dom/style/style.ts","../../src/js/utils/dom/display/display.ts","../../src/js/utils/dom/focus/focus.ts","../../src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/utils/dom/hasClass/hasClass.ts","../../src/js/utils/dom/rect/rect.ts","../../src/js/utils/dom/remove/remove.ts","../../src/js/utils/dom/parseHtml/parseHtml.ts","../../src/js/utils/dom/prevent/prevent.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/queryAll/queryAll.ts","../../src/js/utils/dom/removeClass/removeClass.ts","../../src/js/utils/dom/timeOf/timeOf.ts","../../src/js/utils/dom/unit/unit.ts","../../src/js/constants/project.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/utils/math/math/math.ts","../../src/js/utils/math/approximatelyEqual/approximatelyEqual.ts","../../src/js/utils/math/between/between.ts","../../src/js/utils/math/clamp/clamp.ts","../../src/js/utils/math/sign/sign.ts","../../src/js/utils/string/format/format.ts","../../src/js/utils/string/pad/pad.ts","../../src/js/utils/string/uniqueId/uniqueId.ts","../../src/js/constructors/EventBinder/EventBinder.ts","../../src/js/constants/events.ts","../../src/js/constructors/EventInterface/EventInterface.ts","../../src/js/constructors/RequestInterval/RequestInterval.ts","../../src/js/constructors/State/State.ts","../../src/js/constants/arrows.ts","../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/attributes.ts","../../src/js/constants/classes.ts","../../src/js/components/Drag/constants.ts","../../src/js/constants/types.ts","../../src/js/components/Slides/Slide.ts","../../src/js/components/Autoplay/constants.ts","../../src/js/constants/listener-options.ts","../../src/js/utils/dom/normalizeKey/normalizeKey.ts","../../src/js/components/Keyboard/Keyboard.ts","../../src/js/components/LazyLoad/constants.ts","../../src/js/components/Sync/Sync.ts","../../src/js/components/Media/Media.ts","../../src/js/components/Elements/Elements.ts","../../src/js/utils/dom/closest/closest.ts","../../src/js/components/Slides/Slides.ts","../../src/js/components/Layout/Layout.ts","../../src/js/constructors/Throttle/Throttle.ts","../../src/js/components/Clones/Clones.ts","../../src/js/components/Move/Move.ts","../../src/js/components/Controller/Controller.ts","../../src/js/components/Arrows/Arrows.ts","../../src/js/components/Arrows/path.ts","../../src/js/components/Autoplay/Autoplay.ts","../../src/js/components/Cover/Cover.ts","../../src/js/components/Scroll/Scroll.ts","../../src/js/components/Scroll/constants.ts","../../src/js/components/Drag/Drag.ts","../../src/js/components/LazyLoad/LazyLoad.ts","../../src/js/components/Pagination/Pagination.ts","../../src/js/components/Wheel/Wheel.ts","../../src/js/components/Live/Live.ts","../../src/js/constants/defaults.ts","../../src/js/constants/i18n.ts","../../src/js/transitions/Fade/Fade.ts","../../src/js/transitions/Slide/Slide.ts","../../src/js/core/Splide/Splide.ts","js/plugins.js"],"names":["MEDIA_PREFERS_REDUCED_MOTION","MOVING","SCROLLING","STATES","CREATED","MOUNTED","IDLE","DRAGGING","DESTROYED","empty","array","length","slice","arrayLike","start","end","Array","prototype","call","apply","func","bind","arguments","noop","nextTick","setTimeout","raf","requestAnimationFrame","typeOf","type","subject","isObject","isNull","isArray","isFunction","isString","isUndefined","isHTMLElement","ownerDocument","defaultView","window","HTMLElement","e","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","before","nodes","ref","node","parentNode","insertBefore","matches","selector","filter","child","firstElementChild","ownKeys","Object","keys","forOwn","object","right","reverse","key","assign","source","merge","omit","removeAttribute","elms","attrs","attr","setAttribute","String","create","tag","document","createElement","style","prop","getComputedStyle","display","focus","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","parseHtml","html","DOMParser","parseFromString","body","prevent","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","timeOf","timeStamp","unit","PROJECT_CODE","DATA_ATTRIBUTE","assert","condition","message","Error","min","Math","max","floor","ceil","abs","approximatelyEqual","x","y","epsilon","between","number","exclusive","minimum","maximum","clamp","sign","format","string","replacements","replacement","replace","pad","ids","EventBinder","listeners","forEachEvent","targets","events","eventNS","fragment","callback","options","event","namespace","isEventTarget","remover","removeEventListener","addEventListener","unbind","listener","dispatch","detail","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","destroy","data","EVENT_MOUNTED","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EVENT_SLIDE_KEYDOWN","EVENT_SHIFTED","EventInterface","Splide","bus","createDocumentFragment","binder","on","join","off","emit","RequestInterval","interval","onInterval","onUpdate","limit","startTime","id","now","Date","rate","paused","count","update","pause","cancel","cancelAnimationFrame","resume","rewind","set","time","isPaused","State","initialState","state","is","states","ARROW","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","TTB","ORIENTATION_MAP","width","left","X","Y","ArrowLeft","ArrowRight","ROLE","TAB_INDEX","ARIA_PREFIX","ARIA_CONTROLS","ARIA_CURRENT","ARIA_SELECTED","ARIA_LABEL","ARIA_LABELLEDBY","ARIA_HIDDEN","ARIA_ORIENTATION","ARIA_ROLEDESCRIPTION","ARIA_LIVE","ARIA_BUSY","ARIA_ATOMIC","ALL_ATTRIBUTES","CLASS_PREFIX","CLASS_ROOT","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS_BAR","CLASS_TOGGLE","CLASS_SR","CLASS_ACTIVE","STATUS_CLASS_PREFIX","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","CLASS_FOCUS_IN","CLASS_OVERFLOW","STATUS_CLASSES","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","SLIDE","LOOP","FADE","Slide","index","slideIndex","slide","destroyed","Components","root","isNavigation","updateOnMove","i18n","pagination","slideFocus","resolve","Direction","styles","label","isClone","container","initNavigation","controls","splides","map","splide","Slides","getAt","slideX","onMove","curr","hidden","active","isActive","self","visible","trackRect","Elements","track","slideRect","focusableNodes","activeElement","cloneStatus","mount","slideLabel","useContainer","_style","isWithin","from","distance","diff","INTERVAL_DATA_ATTRIBUTE","SCROLL_LISTENER_OPTIONS","passive","capture","NORMALIZATION_MAP","Spacebar","Right","Left","Up","Down","normalizeKey","KEYBOARD_EVENT","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","breakpoints","reducedMotion","queries","completely","register","queryList","matchMedia","direction","merged","reduce","entry","refresh","opts","base","notify","getPrototypeOf","setup","isMin","mediaQuery","sort","n","m","enable","axisOnly","match","offset","toLowerCase","charAt","toUpperCase","orient","list","isUsingKey","elements","slides","rootClasses","trackClasses","find","arrows","prev","next","bar","toggle","prefix","role","tagName","carousel","concat","getClasses","labelledby","closest","nodeType","parentElement","drag","init","Slide1","Slide2","get","excludeClones","matcher","getIn","page","Controller","toIndex","hasFocus","perPage","forEachItem","images","img","removeNode","getLength","isEnough","vertical","rootRect","overflow","styleSlides","cssPadding","resize","force","newRect","height","cssHeight","gap","autoWidth","fixedWidth","cssSlideSize","fixedHeight","autoHeight","isOverflow","padding","heightRatio","listSize","slideSize","withoutGap","getGap","totalSize","sliderSize","parseFloat","duration","getPadding","cloneCount","clones","remount","observe","computeCloneCount","generate","isHead","clone","cloneNode","Layout","fixedSize","Transition","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","destination","exceededMax","getEnd","shift","backwards","excess","getLimit","size","getPosition","minDistance","Infinity","i","trimming","trimSpace","move","dest","shifted","exceededLimit","exceededMin","endIndex","slideCount","perMove","Move","omitEnd","isLoop","isSlide","getNext","getAdjacent","getPrev","currIndex","prevIndex","onResized","computeDestIndex","loop","snapPage","toPage","setIndex","waitForTransition","go","control","allowSameIndex","indicator","_ref","scroll","snap","getIndex","toDest","created","wrapperClasses","placeholder","wrapper","enabled","createArrow","arrow","arrowPath","nextIndex","prevLabel","nextLabel","last","first","disabled","hovered","focused","autoplay","stopped","play","resetProgress","stop","autoToggle","pauseOnHover","pauseOnFocus","cover","src","friction","onScrolled","noConstrain","noDistance","clear","onEnd","to","t","easingFunc","pow","basePosition","baseEvent","prevBaseEvent","isFree","dragging","clickPrevented","Media","exceeded","disable","onPointerDown","isTouch","noDrag","isTouchEvent","button","onPointerMove","onPointerUp","save","thresholds","isObj","mouse","cancelable","diffCoord","expired","diffTime","hasExceeded","dragMinThreshold","touch","velocity","flickPower","flickMaxPages","rewindByDrag","onClick","orthogonal","coordOf","getBaseEvent","changedTouches","TouchEvent","isDragging","keyboard","onKeydown","_disabled","isSequential","lazyLoad","entries","srcset","spinner","loadNext","check","preloadPages","load","onLoad","paginationClasses","dir","getDirection","nextPage","item","paginationDirection","select","li","class","text","pageX","paginationKeyboard","isParent","sync","lastTime","onWheel","sleep","deltaY","wheelMinThreshold","wheelSleep","releaseWheel","wheel","live","sr","Autoplay","textContent","DEFAULTS","speed","easing","rewindSpeed","Fade","done","endCallback","transition","useScroll","this","_o","_E","_Splide","defaults","JSON","parse","Extensions","_this","_C","_T","ComponentConstructors","Component","component","Sync","_this$event","method","methods","console","AOS"],"mappings":"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","file":"plugins.7f97feee.js","sourceRoot":"..","sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.AOS=t():e.AOS=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p=\"dist/\",t(0)}([function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r=n(1),a=(o(r),n(6)),u=o(a),c=n(7),s=o(c),f=n(8),d=o(f),l=n(9),p=o(l),m=n(10),b=o(m),v=n(11),y=o(v),g=n(14),h=o(g),w=[],k=!1,x={offset:120,delay:0,easing:\"ease\",duration:400,disable:!1,once:!1,startEvent:\"DOMContentLoaded\",throttleDelay:99,debounceDelay:50,disableMutationObserver:!1},j=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e&&(k=!0),k)return w=(0,y.default)(w,x),(0,b.default)(w,x.once),w},O=function(){w=(0,h.default)(),j()},M=function(){w.forEach(function(e,t){e.node.removeAttribute(\"data-aos\"),e.node.removeAttribute(\"data-aos-easing\"),e.node.removeAttribute(\"data-aos-duration\"),e.node.removeAttribute(\"data-aos-delay\")})},S=function(e){return e===!0||\"mobile\"===e&&p.default.mobile()||\"phone\"===e&&p.default.phone()||\"tablet\"===e&&p.default.tablet()||\"function\"==typeof e&&e()===!0},_=function(e){x=i(x,e),w=(0,h.default)();var t=document.all&&!window.atob;return S(x.disable)||t?M():(x.disableMutationObserver||d.default.isSupported()||(console.info('\\n      aos: MutationObserver is not supported on this browser,\\n      code mutations observing has been disabled.\\n      You may have to call \"refreshHard()\" by yourself.\\n    '),x.disableMutationObserver=!0),document.querySelector(\"body\").setAttribute(\"data-aos-easing\",x.easing),document.querySelector(\"body\").setAttribute(\"data-aos-duration\",x.duration),document.querySelector(\"body\").setAttribute(\"data-aos-delay\",x.delay),\"DOMContentLoaded\"===x.startEvent&&[\"complete\",\"interactive\"].indexOf(document.readyState)>-1?j(!0):\"load\"===x.startEvent?window.addEventListener(x.startEvent,function(){j(!0)}):document.addEventListener(x.startEvent,function(){j(!0)}),window.addEventListener(\"resize\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"orientationchange\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"scroll\",(0,u.default)(function(){(0,b.default)(w,x.once)},x.throttleDelay)),x.disableMutationObserver||d.default.ready(\"[data-aos]\",O),w)};e.exports={init:_,refresh:j,refreshHard:O}},function(e,t){},,,,,function(e,t){(function(t){\"use strict\";function n(e,t,n){function o(t){var n=b,o=v;return b=v=void 0,k=t,g=e.apply(o,n)}function r(e){return k=e,h=setTimeout(f,t),M?o(e):g}function a(e){var n=e-w,o=e-k,i=t-n;return S?j(i,y-o):i}function c(e){var n=e-w,o=e-k;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=O();return c(e)?d(e):void(h=setTimeout(f,a(e)))}function d(e){return h=void 0,_&&b?o(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),k=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(O())}function m(){var e=O(),n=c(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),o(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,k=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(s);return t=u(t)||0,i(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?x(u(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e,t,o){var r=!0,a=!0;if(\"function\"!=typeof e)throw new TypeError(s);return i(o)&&(r=\"leading\"in o?!!o.leading:r,a=\"trailing\"in o?!!o.trailing:a),n(e,t,{leading:r,maxWait:t,trailing:a})}function i(e){var t=\"undefined\"==typeof e?\"undefined\":c(e);return!!e&&(\"object\"==t||\"function\"==t)}function r(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":c(e))}function a(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":c(e))||r(e)&&k.call(e)==d}function u(e){if(\"number\"==typeof e)return e;if(a(e))return f;if(i(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(l,\"\");var n=m.test(e);return n||b.test(e)?v(e.slice(2),n?2:8):p.test(e)?f:+e}var c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s=\"Expected a function\",f=NaN,d=\"[object Symbol]\",l=/^\\s+|\\s+$/g,p=/^[-+]0x[0-9a-f]+$/i,m=/^0b[01]+$/i,b=/^0o[0-7]+$/i,v=parseInt,y=\"object\"==(\"undefined\"==typeof t?\"undefined\":c(t))&&t&&t.Object===Object&&t,g=\"object\"==(\"undefined\"==typeof self?\"undefined\":c(self))&&self&&self.Object===Object&&self,h=y||g||Function(\"return this\")(),w=Object.prototype,k=w.toString,x=Math.max,j=Math.min,O=function(){return h.Date.now()};e.exports=o}).call(t,function(){return this}())},function(e,t){(function(t){\"use strict\";function n(e,t,n){function i(t){var n=b,o=v;return b=v=void 0,O=t,g=e.apply(o,n)}function r(e){return O=e,h=setTimeout(f,t),M?i(e):g}function u(e){var n=e-w,o=e-O,i=t-n;return S?x(i,y-o):i}function s(e){var n=e-w,o=e-O;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=j();return s(e)?d(e):void(h=setTimeout(f,u(e)))}function d(e){return h=void 0,_&&b?i(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),O=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(j())}function m(){var e=j(),n=s(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),i(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,O=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(c);return t=a(t)||0,o(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?k(a(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e){var t=\"undefined\"==typeof e?\"undefined\":u(e);return!!e&&(\"object\"==t||\"function\"==t)}function i(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":u(e))}function r(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":u(e))||i(e)&&w.call(e)==f}function a(e){if(\"number\"==typeof e)return e;if(r(e))return s;if(o(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(d,\"\");var n=p.test(e);return n||m.test(e)?b(e.slice(2),n?2:8):l.test(e)?s:+e}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},c=\"Expected a function\",s=NaN,f=\"[object Symbol]\",d=/^\\s+|\\s+$/g,l=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,m=/^0o[0-7]+$/i,b=parseInt,v=\"object\"==(\"undefined\"==typeof t?\"undefined\":u(t))&&t&&t.Object===Object&&t,y=\"object\"==(\"undefined\"==typeof self?\"undefined\":u(self))&&self&&self.Object===Object&&self,g=v||y||Function(\"return this\")(),h=Object.prototype,w=h.toString,k=Math.max,x=Math.min,j=function(){return g.Date.now()};e.exports=n}).call(t,function(){return this}())},function(e,t){\"use strict\";function n(e){var t=void 0,o=void 0,i=void 0;for(t=0;t<e.length;t+=1){if(o=e[t],o.dataset&&o.dataset.aos)return!0;if(i=o.children&&n(o.children))return!0}return!1}function o(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function i(){return!!o()}function r(e,t){var n=window.document,i=o(),r=new i(a);u=t,r.observe(n.documentElement,{childList:!0,subtree:!0,removedNodes:!0})}function a(e){e&&e.forEach(function(e){var t=Array.prototype.slice.call(e.addedNodes),o=Array.prototype.slice.call(e.removedNodes),i=t.concat(o);if(n(i))return u()})}Object.defineProperty(t,\"__esModule\",{value:!0});var u=function(){};t.default={isSupported:i,ready:r}},function(e,t){\"use strict\";function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(){return navigator.userAgent||navigator.vendor||window.opera||\"\"}Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,a=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,u=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,c=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,s=function(){function e(){n(this,e)}return i(e,[{key:\"phone\",value:function(){var e=o();return!(!r.test(e)&&!a.test(e.substr(0,4)))}},{key:\"mobile\",value:function(){var e=o();return!(!u.test(e)&&!c.test(e.substr(0,4)))}},{key:\"tablet\",value:function(){return this.mobile()&&!this.phone()}}]),e}();t.default=new s},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e,t,n){var o=e.node.getAttribute(\"data-aos-once\");t>e.position?e.node.classList.add(\"aos-animate\"):\"undefined\"!=typeof o&&(\"false\"===o||!n&&\"true\"!==o)&&e.node.classList.remove(\"aos-animate\")},o=function(e,t){var o=window.pageYOffset,i=window.innerHeight;e.forEach(function(e,r){n(e,i+o,t)})};t.default=o},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(12),r=o(i),a=function(e,t){return e.forEach(function(e,n){e.node.classList.add(\"aos-init\"),e.position=(0,r.default)(e.node,t.offset)}),e};t.default=a},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(13),r=o(i),a=function(e,t){var n=0,o=0,i=window.innerHeight,a={offset:e.getAttribute(\"data-aos-offset\"),anchor:e.getAttribute(\"data-aos-anchor\"),anchorPlacement:e.getAttribute(\"data-aos-anchor-placement\")};switch(a.offset&&!isNaN(a.offset)&&(o=parseInt(a.offset)),a.anchor&&document.querySelectorAll(a.anchor)&&(e=document.querySelectorAll(a.anchor)[0]),n=(0,r.default)(e).top,a.anchorPlacement){case\"top-bottom\":break;case\"center-bottom\":n+=e.offsetHeight/2;break;case\"bottom-bottom\":n+=e.offsetHeight;break;case\"top-center\":n+=i/2;break;case\"bottom-center\":n+=i/2+e.offsetHeight;break;case\"center-center\":n+=i/2+e.offsetHeight/2;break;case\"top-top\":n+=i;break;case\"bottom-top\":n+=e.offsetHeight+i;break;case\"center-top\":n+=e.offsetHeight/2+i}return a.anchorPlacement||a.offset||isNaN(t)||(o=t),n+o};t.default=a},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){for(var t=0,n=0;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft-(\"BODY\"!=e.tagName?e.scrollLeft:0),n+=e.offsetTop-(\"BODY\"!=e.tagName?e.scrollTop:0),e=e.offsetParent;return{top:n,left:t}};t.default=n},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){return e=e||document.querySelectorAll(\"[data-aos]\"),Array.prototype.map.call(e,function(e){return{node:e}})};t.default=n}])});","/**\r\n * Matches when users request reducing non-essential animations.\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n */\r\nexport const MEDIA_PREFERS_REDUCED_MOTION = '(prefers-reduced-motion: reduce)';","/**\r\n * Splide has been just created.\r\n */\r\nexport const CREATED = 1;\r\n\r\n/**\r\n * Splide has mounted components.\r\n */\r\nexport const MOUNTED = 2;\r\n\r\n/**\r\n * Splide is ready.\r\n */\r\nexport const IDLE = 3;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const MOVING = 4;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const SCROLLING = 5;\r\n\r\n/**\r\n * The user is dragging the slider.\r\n */\r\nexport const DRAGGING = 6;\r\n\r\n/**\r\n * Splide has been destroyed.\r\n */\r\nexport const DESTROYED = 7;\r\n\r\n/**\r\n * The collection of all states.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATES = {\r\n  CREATED,\r\n  MOUNTED,\r\n  IDLE,\r\n  MOVING,\r\n  SCROLLING,\r\n  DRAGGING,\r\n  DESTROYED,\r\n};\r\n","/**\r\n * Empties the array.\r\n *\r\n * @param array - A array to empty.\r\n */\r\nexport function empty( array: any[] ): void {\r\n  array.length = 0;\r\n}\r\n","/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return Array.prototype.slice.call( arrayLike, start, end );\r\n}\r\n","import { AnyFunction, ShiftN } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n * @param args - Arguments to bind to the function.\r\n *\r\n * @return A function where arguments are bound.\r\n */\r\nexport function apply<F extends AnyFunction, A extends any[] = any[]>(\r\n  func: F,\r\n  ...args: A\r\n): ( ...args: ShiftN<Parameters<F>, A[\"length\"]> ) => ReturnType<F>;\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n */\r\nexport function apply( func: AnyFunction ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  return func.bind( null, ...slice( arguments, 1 ) );\r\n}\r\n","/**\r\n * No operation.\r\n */\r\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\r\n","import { AnyFunction } from '../../../types';\r\n\r\n\r\n/**\r\n * Invokes the callback on the next tick.\r\n *\r\n * @param callback - A callback function.\r\n */\r\nexport const nextTick: ( callback: AnyFunction ) => ReturnType<typeof setTimeout> = setTimeout;\r\n","/**\r\n * The alias of `window.requestAnimationFrame()`.\r\n */\r\nexport function raf( func: FrameRequestCallback ): number {\r\n  return requestAnimationFrame( func );\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { apply } from '../function';\r\n\r\n\r\n/**\r\n * The alias of the type check function.\r\n *\r\n * @param type    - A type.\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is the specified type.\r\n */\r\nfunction typeOf( type: string, subject: unknown ): boolean {\r\n  return typeof subject === type;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\r\nexport function isObject( subject: unknown ): subject is object {\r\n  return ! isNull( subject ) && typeOf( 'object', subject );\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\r\nexport const isArray: <T>( subject: unknown ) => subject is T[] = Array.isArray;\r\n\r\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\r\nexport const isFunction = <( subject: unknown ) => subject is AnyFunction>apply( typeOf, 'function' );\r\n\r\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\r\nexport const isString = <( subject: unknown ) => subject is string>apply( typeOf, 'string' );\r\n\r\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\r\nexport const isUndefined = <( subject: unknown ) => subject is undefined>apply( typeOf, 'undefined' );\r\n\r\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\r\nexport function isNull( subject: unknown ): subject is null {\r\n  return subject === null;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLElement instance or not.\r\n * This method takes into account which `window` the node belongs to.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\r\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\r\n  try {\r\n    return subject instanceof ( ( subject as Node ).ownerDocument.defaultView || window ).HTMLElement;\r\n  } catch ( e ) {\r\n    return false;\r\n  }\r\n}","import { isArray } from '../../type/type';\r\n\r\n\r\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\r\nexport function toArray<T>( value: T | T[] ): T[] {\r\n  return isArray( value ) ? value : [ value ];\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n","/**\r\n * Checks if the array includes the value or not.\r\n * `Array#includes` is not supported by IE.\r\n *\r\n * @param array - An array.\r\n * @param value - A value to search for.\r\n *\r\n * @return `true` if the array includes the value, or otherwise `false`.\r\n */\r\nexport function includes<T>( array: T[], value: T ): boolean {\r\n  return array.indexOf( value ) > -1;\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * Extended `Array#push()` that accepts an item or an array with items.\r\n *\r\n * @param array - An array to push items.\r\n * @param items - An item or items to push.\r\n *\r\n * @return A provided array itself.\r\n */\r\nexport function push<T>( array: T[], items: T | T[] ): T[] {\r\n  array.push( ...toArray( items ) );\r\n  return array;\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\r\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\r\n  if ( elm ) {\r\n    forEach( classes, name => {\r\n      if ( name ) {\r\n        elm.classList[ add ? 'add' : 'remove' ]( name );\r\n      }\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\r\nexport function addClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\r\nexport function append( parent: Element, children: Node | Node[] ): void {\r\n  forEach( children, parent.appendChild.bind( parent ) );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Inserts a node or nodes before the specified reference node.\r\n *\r\n * @param nodes - A node or nodes to insert.\r\n * @param ref   - A reference node.\r\n */\r\nexport function before( nodes: Node | Node[], ref: Node | null ): void {\r\n  forEach( nodes, node => {\r\n    const parent = ( ref || node ).parentNode;\r\n\r\n    if ( parent ) {\r\n      parent.insertBefore( node, ref );\r\n    }\r\n  } );\r\n}\r\n","import { isHTMLElement } from '../../type/type';\r\n\r\n\r\n/**\r\n * Checks if the element can be selected by the provided selector or not.\r\n *\r\n * @param elm      - An element to check.\r\n * @param selector - A selector to test.\r\n *\r\n * @return `true` if the selector matches the element, or otherwise `false`.\r\n */\r\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\r\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - Optional. A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\r\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E[] {\r\n  const children = parent ? slice( parent.children ) as E[] : [];\r\n  return selector ? children.filter( child => matches( child, selector ) ) : children;\r\n}\r\n","import { children } from '../children/children';\r\n\r\n\r\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\r\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\r\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\r\n}\r\n","/**\r\n * An alias of `Object.keys()`\r\n */\r\nexport const ownKeys = Object.keys;","import { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\r\n *\r\n * @param object   - An object to iterate over.\r\n * @param iteratee - An iteratee function that takes `value` and `key` as arguments.\r\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\r\n *\r\n * @return A provided object itself.\r\n */\r\nexport function forOwn<T extends object>(\r\n  object: T,\r\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\r\n  right?: boolean\r\n): T {\r\n  if ( object ) {\r\n    ( right ? ownKeys( object ).reverse() : ownKeys( object ) ).forEach( key => {\r\n      key !== '__proto__' && iteratee( object[ key ], key );\r\n    } );\r\n  }\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Assigns U to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - An object to assign.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assign<T, U> = Omit<T, keyof U> & U;\r\n\r\n/**\r\n * Recursively assigns U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assigned<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Assigned<Assign<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function assign<T extends object>( object: T ): T;\r\n\r\nexport function assign<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Assigned<T, U, U['length']>>\r\n\r\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n *\r\n * @param object - An object to assign properties to.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\r\nexport function assign<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      object[ key ] = source[ key ];\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { isArray, isObject } from '../../type/type';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Merges U to T.\r\n *\r\n * @typeParam T - An object to merge U into.\r\n * @typeParam U - An object to merge properties from.\r\n *\r\n * @return A merged object type.\r\n */\r\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\r\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\r\n    ? U[ K ] extends any[]\r\n      ? U[ K ]\r\n      : T[ K ] extends object\r\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Resolve<Cast<A, object>> : never\r\n        : U[ K ]\r\n    : U[ K ];\r\n} & Omit<U, keyof T>;\r\n\r\n/**\r\n * Recursively merges U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Merged<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Merged<Merge<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function merge<T extends object>( object: T ): T;\r\n\r\nexport function merge<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Merged<T, U, U['length']>>\r\n\r\n/**\r\n * Recursively merges source properties to the object.\r\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\r\n *\r\n * @param object - An object to merge properties to.\r\n *\r\n * @return A new object with merged properties.\r\n */\r\nexport function merge<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      if ( isArray( value ) ) {\r\n        object[ key ] = value.slice();\r\n      } else if ( isObject( value ) ) {\r\n        object[ key ] = merge( {}, isObject( object[ key ] ) ? object[ key ] : {}, value );\r\n      } else {\r\n        object[ key ] = value;\r\n      }\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { forEach } from '../../array';\r\nimport { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Deletes specified own keys from the object.\r\n *\r\n * @param object - An object.\r\n * @param keys   - A key or keys to delete. If not specified, all own enumerable keys will be deleted.\r\n */\r\nexport function omit( object: object, keys?: string | string[] ): void {\r\n  forEach( keys || ownKeys( object ), key => {\r\n    delete object[ key ];\r\n  } );\r\n}","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elms  - An element or elements.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\r\nexport function removeAttribute( elms: Element | Element[], attrs: string | string[] ): void {\r\n  forEach( elms, elm => {\r\n    forEach( attrs, attr => {\r\n      elm && elm.removeAttribute( attr );\r\n    } );\r\n  } );\r\n}\r\n","import { forEach } from '../../array';\r\nimport { forOwn } from '../../object';\r\nimport { isNull, isObject } from '../../type/type';\r\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\r\n\r\n\r\nexport function setAttribute( elms: Element | Element[], attr: string, value: string | number | boolean ): void;\r\nexport function setAttribute( elms: Element | Element[], attrs: Record<string, string | number | boolean> ): void;\r\n\r\n/**\r\n * Sets attribute/attributes to the element or elements.\r\n * If the value is `null` or an empty string, the attribute will be removed.\r\n *\r\n * @param elms  - An element or an array with elements.\r\n * @param attrs - An attribute name of an object with pairs of a name and a value.\r\n * @param value - A value to set.\r\n */\r\nexport function setAttribute(\r\n  elms: Element | Element[],\r\n  attrs: string | Record<string, string | number | boolean>,\r\n  value?: string | number | boolean\r\n): void {\r\n  if ( isObject( attrs ) ) {\r\n    forOwn( attrs, ( value, name ) => {\r\n      setAttribute( elms, name, value );\r\n    } );\r\n  } else {\r\n    forEach( elms, elm => {\r\n      isNull( value ) || value === '' ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { addClass } from '../addClass/addClass';\r\nimport { append } from '../append/append';\r\nimport { setAttribute } from '../setAttribute/setAttribute';\r\n\r\n\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ];\r\n\r\nexport function create(\r\n  tag: string,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElement;\r\n\r\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ] {\r\n  const elm = document.createElement( tag );\r\n\r\n  if ( attrs ) {\r\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\r\n  }\r\n\r\n  parent && append( parent, elm );\r\n\r\n  return elm;\r\n}\r\n","import { isNull, isUndefined } from '../../type/type';\r\n\r\n\r\nexport function style<K extends keyof CSSStyleDeclaration>(\r\n  elm: HTMLElement,\r\n  prop: K,\r\n): CSSStyleDeclaration[ K ];\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n): string;\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value: string | number\r\n): void;\r\n\r\n\r\n/**\r\n * Applies inline styles to the provided element by an object literal.\r\n *\r\n * @param elm   - An element to apply styles to.\r\n * @param prop  - An object literal with styles or a property name.\r\n * @param value - A value to set.\r\n */\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value?: string | number\r\n): string | void {\r\n  if ( isUndefined( value ) ) {\r\n    return getComputedStyle( elm )[ prop ];\r\n  }\r\n\r\n  if ( ! isNull( value ) ) {\r\n    elm.style[ prop ] = `${ value }`;\r\n  }\r\n}\r\n","import { style } from '../style/style';\r\n\r\n\r\n/**\r\n * Sets the `display` CSS value to the element.\r\n *\r\n * @param elm     - An element to set a new value to.\r\n * @param display - A new `display` value.\r\n */\r\nexport function display( elm: HTMLElement, display: string ): void {\r\n  style( elm, 'display', display );\r\n}\r\n","/**\r\n * Focuses the provided element without scrolling the ascendant element.\r\n *\r\n * @param elm - An element to focus.\r\n */\r\nexport function focus( elm: HTMLElement ): void {\r\n  elm[ 'setActive' ] && elm[ 'setActive' ]() || elm.focus( { preventScroll: true } );\r\n}\r\n","/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\r\nexport function getAttribute( elm: Element, attr: string ): string | null {\r\n  return elm.getAttribute( attr );\r\n}\r\n","/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\r\nexport function hasClass( elm: Element, className: string ): boolean {\r\n  return elm && elm.classList.contains( className );\r\n}\r\n","/**\r\n * Returns a DOMRect object of the provided element.\r\n *\r\n * @param target - An element.\r\n */\r\nexport function rect( target: Element ): DOMRect {\r\n  return target.getBoundingClientRect();\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\r\nexport function remove( nodes: Node | Node[] ): void {\r\n  forEach( nodes, node => {\r\n    if ( node && node.parentNode ) {\r\n      node.parentNode.removeChild( node );\r\n    }\r\n  } );\r\n}\r\n","import { child } from '../child/child';\r\n\r\n\r\n/**\r\n * Parses the provided HTML string and returns the first element.\r\n *\r\n * @param html - An HTML string to parse.\r\n *\r\n * @return An Element on success, or otherwise `undefined`.\r\n */\r\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\r\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\r\n}\r\n","/**\r\n * Call the `preventDefault()` of the provided event.\r\n *\r\n * @param e               - An Event object.\r\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\r\n */\r\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\r\n  e.preventDefault();\r\n\r\n  if ( stopPropagation ) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n  }\r\n}\r\n","/**\r\n * Returns an element that matches the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return A found element or `null`.\r\n */\r\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\r\n  return parent && parent.querySelector( selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\r\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector?: string ): E[] {\r\n  return selector ? slice<E>( parent.querySelectorAll( selector ) ) : [];\r\n}\r\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","/**\r\n * Extracts the timestamp from the event object.\r\n *\r\n * @param e - An Event object.\r\n */\r\nexport function timeOf( e: Event ): number {\r\n  return e.timeStamp;\r\n}","import { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * Appends `px` to the provided number.\r\n * If the value is already string, just returns it.\r\n *\r\n * @param value - A value to append `px` to.\r\n *\r\n * @return A string with the CSS unit.\r\n */\r\nexport function unit( value: number | string ): string {\r\n  return isString( value ) ? value : value ? `${ value }px` : '';\r\n}\r\n","/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message?: string ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message || '' }` );\r\n  }\r\n}\r\n","export const { min, max, floor, ceil, abs } = Math;\r\n","import { abs } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the provided 2 numbers are approximately equal or not.\r\n *\r\n * @param x       - A number.\r\n * @param y       - Another number to compare.\r\n * @param epsilon - An accuracy that defines the approximation.\r\n *\r\n * @return `true` if 2 numbers are considered to be equal, or otherwise `false`.\r\n */\r\nexport function approximatelyEqual( x: number, y: number, epsilon: number ): boolean {\r\n  return abs( x - y ) < epsilon;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the subject number is between `x` and `y`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param x         - A min or max number.\r\n * @param y         - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\r\nexport function between( number: number, x: number, y: number, exclusive?: boolean ): boolean {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return exclusive\r\n    ? minimum < number && number < maximum\r\n    : minimum <= number && number <= maximum;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n *\r\n * @return A clamped number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/**\r\n * Returns the sign of the provided number.\r\n *\r\n * @param x - A number.\r\n *\r\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\r\n */\r\nexport function sign( x: number ): number {\r\n  return +( x > 0 ) - +( x < 0 );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Formats a string.\r\n *\r\n * @param string       - A string to format.\r\n * @param replacements - A replacement or replacements.\r\n *\r\n * @return A formatted string.\r\n */\r\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\r\n  forEach( replacements, replacement => {\r\n    string = string.replace( '%s', `${ replacement }` );\r\n  } );\r\n\r\n  return string;\r\n}\r\n","/**\r\n * Pads the number with 0.\r\n *\r\n * @param number - A number to pad.\r\n *\r\n * @return string - Padded number.\r\n */\r\nexport function pad( number: number ): string {\r\n  return number < 10 ? `0${ number }` : `${ number }`;\r\n}\r\n","import { pad } from '../pad/pad';\r\n\r\n\r\n/**\r\n * Stores unique IDs.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst ids: Record<string, number> = {};\r\n\r\n/**\r\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\r\n *\r\n * @param prefix - A prefix for the ID.\r\n */\r\nexport function uniqueId( prefix: string ): string {\r\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { empty, forEach } from '../../utils';\r\n\r\n\r\n/**\r\n * The type for an EventTarget or an array with EventTarget objects.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype EventTargets = EventTarget | EventTarget[];\r\n\r\n/**\r\n * The interface for the EventBinder object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventBinderObject {\r\n  bind( target: EventTargets, events: string | string[], callback: AnyFunction, options?: AddEventListenerOptions ): void\r\n  unbind( target: EventTarget | EventTarget[], events: string | string[], callback?: AnyFunction ): void;\r\n  dispatch<T>( target: EventTarget, event: string, detail?: T ): void;\r\n  destroy(): void;\r\n}\r\n\r\n/**\r\n * The constructor function to provide methods to subscribe native events.\r\n *\r\n * @since 4.0.0\r\n * @constructor\r\n *\r\n * @return An EventBinder object.\r\n */\r\nexport function EventBinder(): EventBinderObject {\r\n  /**\r\n   * Stores all handlers that listen to native events.\r\n   * `[ target, event, namespace, callback, remover ]`\r\n   */\r\n  let listeners: [ EventTarget, string, string | undefined, AnyFunction, () => void ][] = [];\r\n\r\n  /**\r\n   * Listens to native events.\r\n   * - `destroy()` can unsubscribe all events.\r\n   * - In IE, mediaQueryList does not inherit EventTarget,\r\n   *   and only supports deprecated `addListener` and `removeListener`.\r\n   *\r\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event or events to listen to.\r\n   * @param callback - A callback function.\r\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\r\n   */\r\n  function bind(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    callback: AnyFunction,\r\n    options?: AddEventListenerOptions\r\n  ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      const isEventTarget = 'addEventListener' in target;\r\n      const remover = isEventTarget\r\n        ? target.removeEventListener.bind( target, event, callback, options )\r\n        : target[ 'removeListener' ].bind( target, callback );\r\n\r\n      isEventTarget ? target.addEventListener( event, callback, options ) : target[ 'addListener' ]( callback );\r\n      listeners.push( [ target, event, namespace, callback, remover ] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes the event handler.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names to remove.\r\n   * @param callback - Optional. Specify the callback to remove.\r\n   */\r\n  function unbind( targets: EventTargets, events: string | string[], callback?: AnyFunction ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      listeners = listeners.filter( listener => {\r\n        if ( listener[ 0 ] === target\r\n          && listener[ 1 ] === event\r\n          && listener[ 2 ] === namespace\r\n          && ( ! callback || listener[ 3 ] === callback )\r\n        ) {\r\n          listener[ 4 ]();\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Dispatches a custom event of the target.\r\n   *\r\n   * @param target - An event target.\r\n   * @param type   - An event type.\r\n   * @param detail - Optional. The `detail` object of the event.\r\n   *\r\n   * @return An event object.\r\n   */\r\n  function dispatch<T>( target: EventTarget, type: string, detail?: T ): CustomEvent {\r\n    let e: CustomEvent;\r\n    const bubbles = true;\r\n\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      e = new CustomEvent( type, { bubbles, detail } );\r\n    } else {\r\n      e = document.createEvent( 'CustomEvent' );\r\n      e.initCustomEvent( type, bubbles, false, detail );\r\n    }\r\n\r\n    target.dispatchEvent( e );\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * Iterates over each target and event.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names.\r\n   * @param iteratee - An iteratee function.\r\n   */\r\n  function forEachEvent(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    iteratee: ( target: EventTarget, event: string, namespace: string | undefined ) => void\r\n  ): void {\r\n    forEach( targets, target => {\r\n      target && forEach( events, events => {\r\n        events.split( ' ' ).forEach( eventNS => {\r\n          const fragment = eventNS.split( '.' );\r\n          iteratee( target, fragment[ 0 ], fragment[ 1 ] );\r\n        } );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners.\r\n   */\r\n  function destroy(): void {\r\n    listeners.forEach( data => { data[ 4 ]() } );\r\n    empty( listeners );\r\n  }\r\n\r\n  return {\r\n    bind,\r\n    unbind,\r\n    dispatch,\r\n    destroy,\r\n  };\r\n}\r\n","export const EVENT_MOUNTED            = 'mounted';\r\nexport const EVENT_READY              = 'ready';\r\nexport const EVENT_MOVE               = 'move';\r\nexport const EVENT_MOVED              = 'moved';\r\nexport const EVENT_CLICK              = 'click';\r\nexport const EVENT_ACTIVE             = 'active';\r\nexport const EVENT_INACTIVE           = 'inactive';\r\nexport const EVENT_VISIBLE            = 'visible';\r\nexport const EVENT_HIDDEN             = 'hidden';\r\nexport const EVENT_REFRESH            = 'refresh';\r\nexport const EVENT_UPDATED            = 'updated';\r\nexport const EVENT_RESIZE             = 'resize';\r\nexport const EVENT_RESIZED            = 'resized';\r\nexport const EVENT_DRAG               = 'drag';\r\nexport const EVENT_DRAGGING           = 'dragging';\r\nexport const EVENT_DRAGGED            = 'dragged';\r\nexport const EVENT_SCROLL             = 'scroll';\r\nexport const EVENT_SCROLLED           = 'scrolled';\r\nexport const EVENT_OVERFLOW           = 'overflow';\r\nexport const EVENT_DESTROY            = 'destroy';\r\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\r\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\r\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\r\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\r\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\r\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\r\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\r\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\r\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\r\n\r\n/** @internal */\r\nexport const EVENT_SLIDE_KEYDOWN     = 'sk';\r\nexport const EVENT_SHIFTED           = 'sh';\r\nexport const EVENT_END_INDEX_CHANGED = 'ei';\r\n","import { EVENT_DESTROY } from '../../constants/events';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, EventMap } from '../../types';\r\nimport { apply, assign, isArray, slice, toArray } from '../../utils';\r\nimport { EventBinder, EventBinderObject } from '../EventBinder/EventBinder';\r\n\r\n\r\n/**\r\n * The interface for the EventInterface object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventInterfaceObject extends EventBinderObject {\r\n  on<K extends keyof EventMap>( event: K, callback: EventMap[ K ] ): void;\r\n  on( events: string | string[], callback: AnyFunction ): void;\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): void;\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): void\r\n  emit( event: string, ...args: any[] ): void;\r\n\r\n  /** @internal */\r\n  bus: DocumentFragment;\r\n}\r\n\r\n/**\r\n * The constructor function that provides interface for internal and native events.\r\n *\r\n * @since 3.0.0\r\n * @constructor\r\n *\r\n * @param Splide - A Splide instance.\r\n *\r\n * @return A collection of interface functions.\r\n */\r\nexport function EventInterface( Splide?: Splide ): EventInterfaceObject {\r\n  /**\r\n   * The document fragment for internal events.\r\n   * Provide the Splide instance to share the bus.\r\n   */\r\n  const bus = Splide ? Splide.event.bus : document.createDocumentFragment();\r\n\r\n  /**\r\n   * An event binder object.\r\n   */\r\n  const binder = EventBinder();\r\n\r\n  /**\r\n   * Listens to an internal event or events.\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param callback - A callback function to register.\r\n   */\r\n  function on( events: string | string[], callback: AnyFunction ): void {\r\n    binder.bind( bus, toArray( events ).join( ' ' ), e => {\r\n      callback.apply( callback, isArray( e.detail ) ? e.detail : [] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Triggers callback functions.\r\n   * This accepts additional arguments and passes them to callbacks.\r\n   *\r\n   * @param event - An event name.\r\n   */\r\n  function emit( event: string ): void {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    binder.dispatch( bus, event, slice( arguments, 1 ) );\r\n  }\r\n\r\n  if ( Splide ) {\r\n    Splide.event.on( EVENT_DESTROY, binder.destroy );\r\n  }\r\n\r\n  return assign( binder, {\r\n    bus,\r\n    on,\r\n    off: apply( binder.unbind, bus ),\r\n    emit,\r\n  } );\r\n}","import { min, raf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface RequestIntervalInterface {\r\n  start( resume?: boolean ): void;\r\n  pause(): void;\r\n  rewind(): void;\r\n  cancel(): void;\r\n  set( interval: number ): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param interval   - The interval duration in milliseconds.\r\n * @param onInterval - The callback fired on every interval.\r\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\r\n * @param limit      - Optional. Limits the number of interval.\r\n */\r\nexport function RequestInterval(\r\n  interval: number,\r\n  onInterval: () => void,\r\n  onUpdate?: ( rate: number ) => void,\r\n  limit?: number\r\n): RequestIntervalInterface {\r\n  const { now } = Date;\r\n\r\n  /**\r\n   * The time when the interval starts.\r\n   */\r\n  let startTime: number;\r\n\r\n  /**\r\n   * The current progress rate.\r\n   */\r\n  let rate = 0;\r\n\r\n  /**\r\n   * The animation frame ID.\r\n   */\r\n  let id: number;\r\n\r\n  /**\r\n   * Indicates whether the interval is currently paused or not.\r\n   */\r\n  let paused = true;\r\n\r\n  /**\r\n   * The loop count. This only works when the `limit` argument is provided.\r\n   */\r\n  let count = 0;\r\n\r\n  /**\r\n   * The update function called on every animation frame.\r\n   */\r\n  function update(): void {\r\n    if ( ! paused ) {\r\n      rate = interval ? min( ( now() - startTime ) / interval, 1 ) : 1;\r\n      onUpdate && onUpdate( rate );\r\n\r\n      if ( rate >= 1 ) {\r\n        onInterval();\r\n        startTime = now();\r\n\r\n        if ( limit && ++count >= limit ) {\r\n          return pause();\r\n        }\r\n      }\r\n\r\n      id = raf( update );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the interval.\r\n   *\r\n   * @param resume - Optional. Whether to resume the paused progress or not.\r\n   */\r\n  function start( resume?: boolean ): void {\r\n    resume || cancel();\r\n    startTime = now() - ( resume ? rate * interval : 0 );\r\n    paused    = false;\r\n    id        = raf( update );\r\n  }\r\n\r\n  /**\r\n   * Pauses the interval.\r\n   */\r\n  function pause(): void {\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Rewinds the current progress.\r\n   */\r\n  function rewind(): void {\r\n    startTime = now();\r\n    rate      = 0;\r\n\r\n    if ( onUpdate ) {\r\n      onUpdate( rate );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the interval.\r\n   */\r\n  function cancel() {\r\n    id && cancelAnimationFrame( id );\r\n    rate   = 0;\r\n    id     = 0;\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Sets new interval duration.\r\n   *\r\n   * @param time - The interval duration in milliseconds.\r\n   */\r\n  function set( time: number ): void {\r\n    interval = time;\r\n  }\r\n\r\n  /**\r\n   * Checks if the interval is paused or not.\r\n   *\r\n   * @return `true` if the interval is paused, or otherwise `false`.\r\n   */\r\n  function isPaused(): boolean {\r\n    return paused;\r\n  }\r\n\r\n  return {\r\n    start,\r\n    rewind,\r\n    pause,\r\n    cancel,\r\n    set,\r\n    isPaused,\r\n  };\r\n}\r\n","import { includes, toArray } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the State object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface StateObject {\r\n  set( state: number ): void;\r\n  is( states: number | number[] ): boolean;\r\n}\r\n\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param initialState - Specifies the initial state.\r\n */\r\nexport function State( initialState: number ): StateObject {\r\n  /**\r\n   * The current state.\r\n   */\r\n  let state = initialState;\r\n\r\n  /**\r\n   * Sets a new state.\r\n   *\r\n   * @param value - A new state value.\r\n   */\r\n  function set( value: number ): void {\r\n    state = value;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state matches the provided one.\r\n   *\r\n   * @param states - A state to check.\r\n   *\r\n   * @return `true` if the current state is the provided one.\r\n   */\r\n  function is( states: number | number[] ): boolean {\r\n    return includes( toArray( states ), state );\r\n  }\r\n\r\n  return { set, is };\r\n}\r\n","const ARROW = 'Arrow';\r\nexport const ARROW_LEFT  = `${ ARROW }Left`;\r\nexport const ARROW_RIGHT = `${ ARROW }Right`;\r\nexport const ARROW_UP    = `${ ARROW }Up`;\r\nexport const ARROW_DOWN  = `${ ARROW }Down`;","/**\r\n * Enumerates slides from left to right.\r\n */\r\nexport const LTR = 'ltr';\r\n\r\n/**\r\n * Enumerates slides from right to left.\r\n */\r\nexport const RTL = 'rtl';\r\n\r\n/**\r\n * Enumerates slides in a col.\r\n */\r\nexport const TTB = 'ttb';\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../constants/arrows';\r\nimport { RTL, TTB } from '../../constants/directions';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\n\r\n\r\n/**\r\n * The interface for the Direction component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DirectionComponent extends BaseComponent {\r\n  resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string;\r\n  orient( value: number ): number;\r\n}\r\n\r\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ORIENTATION_MAP = {\r\n  width     : [ 'height' ],\r\n  left      : [ 'top', 'right' ],\r\n  right     : [ 'bottom', 'left' ],\r\n  x         : [ 'y' ],\r\n  X         : [ 'Y' ],\r\n  Y         : [ 'X' ],\r\n  ArrowLeft : [ ARROW_UP, ARROW_RIGHT ],\r\n  ArrowRight: [ ARROW_DOWN, ARROW_LEFT ],\r\n};\r\n\r\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\r\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\r\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop      - A property name to translate.\r\n   * @param axisOnly  - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   * @param direction - Optional. Specify the direction. The default value is the `direction` option.\r\n   */\r\n  function resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string {\r\n    direction = direction || options.direction;\r\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\r\n\r\n    return ORIENTATION_MAP[ prop ] && ORIENTATION_MAP[ prop ][ index ]\r\n      || prop.replace( /width|left|right/i, ( match, offset ) => {\r\n        const replacement = ORIENTATION_MAP[ match.toLowerCase() ][ index ] || match;\r\n        return offset > 0 ? replacement.charAt( 0 ).toUpperCase() + replacement.slice( 1 ) : replacement;\r\n      } );\r\n  }\r\n\r\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\r\n  function orient( value: number ): number {\r\n    return value * ( options.direction === RTL ? 1 : -1 );\r\n  }\r\n\r\n  return {\r\n    resolve,\r\n    orient,\r\n  };\r\n}\r\n","export const ROLE      = 'role';\r\nexport const TAB_INDEX = 'tabindex';\r\nexport const DISABLED  = 'disabled';\r\n\r\nexport const ARIA_PREFIX          = 'aria-';\r\nexport const ARIA_CONTROLS        = `${ ARIA_PREFIX }controls`;\r\nexport const ARIA_CURRENT         = `${ ARIA_PREFIX }current`;\r\nexport const ARIA_SELECTED        = `${ ARIA_PREFIX }selected`;\r\nexport const ARIA_LABEL           = `${ ARIA_PREFIX }label`;\r\nexport const ARIA_LABELLEDBY      = `${ ARIA_PREFIX }labelledby`;\r\nexport const ARIA_HIDDEN          = `${ ARIA_PREFIX }hidden`;\r\nexport const ARIA_ORIENTATION     = `${ ARIA_PREFIX }orientation`;\r\nexport const ARIA_ROLEDESCRIPTION = `${ ARIA_PREFIX }roledescription`;\r\nexport const ARIA_LIVE            = `${ ARIA_PREFIX }live`;\r\nexport const ARIA_BUSY            = `${ ARIA_PREFIX }busy`;\r\nexport const ARIA_ATOMIC          = `${ ARIA_PREFIX }atomic`;\r\n\r\n/**\r\n * The array with all attributes to remove later.\r\n * Need to manually remove attributes that are not in this.\r\n * Note that removing `aria-live` disables the live region until the page reload.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ALL_ATTRIBUTES = [\r\n  ROLE,\r\n  TAB_INDEX,\r\n  DISABLED,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_LABEL,\r\n  ARIA_LABELLEDBY,\r\n  ARIA_HIDDEN,\r\n  ARIA_ORIENTATION,\r\n  ARIA_ROLEDESCRIPTION,\r\n];\r\n","import { PROJECT_CODE } from './project';\r\n\r\n/**\r\n * The prefix for classes.\r\n *\r\n * @since 4.1.0\r\n */\r\nconst CLASS_PREFIX = `${ PROJECT_CODE }__`;\r\n\r\n/**\r\n * The prefix for status classes.\r\n *\r\n * @since 4.1.0\r\n */\r\nconst STATUS_CLASS_PREFIX = 'is-';\r\n\r\n/**\r\n * All classes as constants.\r\n */\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_TRACK           = `${ CLASS_PREFIX }track`;\r\nexport const CLASS_LIST            = `${ CLASS_PREFIX }list`;\r\nexport const CLASS_SLIDE           = `${ CLASS_PREFIX }slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ CLASS_PREFIX }arrows`;\r\nexport const CLASS_ARROW           = `${ CLASS_PREFIX }arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ CLASS_PREFIX }pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ CLASS_PREFIX }progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_TOGGLE          = `${ CLASS_PREFIX }toggle`;\r\nexport const CLASS_TOGGLE_PLAY     = `${ CLASS_TOGGLE }__play`;\r\nexport const CLASS_TOGGLE_PAUSE    = `${ CLASS_TOGGLE }__pause`;\r\nexport const CLASS_SPINNER         = `${ CLASS_PREFIX }spinner`;\r\nexport const CLASS_SR              = `${ CLASS_PREFIX }sr`;\r\nexport const CLASS_INITIALIZED     = `${ STATUS_CLASS_PREFIX }initialized`;\r\nexport const CLASS_ACTIVE          = `${ STATUS_CLASS_PREFIX }active`;\r\nexport const CLASS_PREV            = `${ STATUS_CLASS_PREFIX }prev`;\r\nexport const CLASS_NEXT            = `${ STATUS_CLASS_PREFIX }next`;\r\nexport const CLASS_VISIBLE         = `${ STATUS_CLASS_PREFIX }visible`;\r\nexport const CLASS_LOADING         = `${ STATUS_CLASS_PREFIX }loading`;\r\nexport const CLASS_FOCUS_IN        = `${ STATUS_CLASS_PREFIX }focus-in`;\r\nexport const CLASS_OVERFLOW        = `${ STATUS_CLASS_PREFIX }overflow`;\r\n\r\n/**\r\n * The array with all status classes except for `is-initialized`.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [\r\n  CLASS_ACTIVE,\r\n  CLASS_VISIBLE,\r\n  CLASS_PREV,\r\n  CLASS_NEXT,\r\n  CLASS_LOADING,\r\n  CLASS_FOCUS_IN,\r\n  CLASS_OVERFLOW,\r\n];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","/**\r\n * The power of the friction.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION = 5;\r\n\r\n/**\r\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOG_INTERVAL = 200;\r\n\r\n/**\r\n * Start events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\r\n\r\n/**\r\n * Update events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\r\n\r\n/**\r\n * End events for dragging.\r\n * The `click` event is required because the browser sometimes dispatches `drag` events instead of `mouse`.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup click';\r\n","/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SLIDE = 'slide';\r\n\r\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOOP = 'loop';\r\n\r\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FADE = 'fade';\r\n","import {\r\n  ALL_ATTRIBUTES,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_HIDDEN,\r\n  ARIA_LABEL,\r\n  ARIA_ROLEDESCRIPTION,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_CONTAINER,\r\n  CLASS_NEXT,\r\n  CLASS_PREV,\r\n  CLASS_VISIBLE,\r\n  STATUS_CLASSES,\r\n} from '../../constants/classes';\r\nimport {\r\n  EVENT_ACTIVE,\r\n  EVENT_CLICK,\r\n  EVENT_HIDDEN,\r\n  EVENT_INACTIVE,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SCROLLED,\r\n  EVENT_SHIFTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_VISIBLE,\r\n} from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent } from '../../types';\r\nimport {\r\n  abs,\r\n  apply,\r\n  ceil,\r\n  child,\r\n  floor,\r\n  focus,\r\n  format,\r\n  getAttribute,\r\n  hasClass,\r\n  min,\r\n  pad,\r\n  queryAll,\r\n  rect,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  style as _style,\r\n  toggleClass,\r\n} from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Slide sub component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface  SlideComponent extends BaseComponent {\r\n  index: number;\r\n  slideIndex: number;\r\n  slide: HTMLElement;\r\n  container: HTMLElement;\r\n  isClone: boolean;\r\n  update(): void;\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  isWithin( from: number, distance: number ): boolean;\r\n}\r\n\r\n/**\r\n * The subcomponent for managing each slide.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param index      - A slide index.\r\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not a clone.\r\n * @param slide      - A slide element.\r\n *\r\n * @return A Slide subcomponent.\r\n */\r\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Components, root, options } = Splide;\r\n  const { isNavigation, updateOnMove, i18n, pagination, slideFocus } = options;\r\n  const { resolve } = Components.Direction;\r\n  const styles    = getAttribute( slide, 'style' );\r\n  const label     = getAttribute( slide, ARIA_LABEL );\r\n  const isClone   = slideIndex > -1;\r\n  const container = child( slide, `.${ CLASS_CONTAINER }` );\r\n\r\n  /**\r\n   * Turns into `true` when the component is destroyed.\r\n   */\r\n  let destroyed: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount( this: SlideComponent ): void {\r\n    if ( ! isClone ) {\r\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\r\n      setAttribute( slide, ROLE, pagination ? 'tabpanel' : 'group' );\r\n      setAttribute( slide, ARIA_ROLEDESCRIPTION, i18n.slide );\r\n      setAttribute( slide, ARIA_LABEL, label || format( i18n.slideLabel, [ index + 1, Splide.length ] ) );\r\n    }\r\n\r\n    listen();\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    bind( slide, 'click', apply( emit, EVENT_CLICK, self ) );\r\n    bind( slide, 'keydown', apply( emit, EVENT_SLIDE_KEYDOWN, self ) );\r\n    on( [ EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED ], update );\r\n    on( EVENT_NAVIGATION_MOUNTED, initNavigation );\r\n\r\n    if ( updateOnMove ) {\r\n      on( EVENT_MOVE, onMove );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    destroyed = true;\r\n    event.destroy();\r\n    removeClass( slide, STATUS_CLASSES );\r\n    removeAttribute( slide, ALL_ATTRIBUTES );\r\n    setAttribute( slide, 'style', styles );\r\n    setAttribute( slide, ARIA_LABEL, label || '' );\r\n  }\r\n\r\n  /**\r\n   * Initializes slides as navigation.\r\n   */\r\n  function initNavigation(): void {\r\n    const controls = Splide.splides.map( target => {\r\n      const Slide = target.splide.Components.Slides.getAt( index );\r\n      return Slide ? Slide.slide.id : '';\r\n    } ).join( ' ' );\r\n\r\n    setAttribute( slide, ARIA_LABEL, format( i18n.slideX, ( isClone ? slideIndex : index ) + 1 ) );\r\n    setAttribute( slide, ARIA_CONTROLS, controls );\r\n    setAttribute( slide, ROLE, slideFocus ? 'button' : '' );\r\n    slideFocus && removeAttribute( slide, ARIA_ROLEDESCRIPTION );\r\n  }\r\n\r\n  /**\r\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\r\n   */\r\n  function onMove(): void {\r\n    if ( ! destroyed ) {\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates attribute and classes of the slide.\r\n   */\r\n  function update(): void {\r\n    if ( ! destroyed ) {\r\n      const { index: curr } = Splide;\r\n\r\n      updateActivity();\r\n      updateVisibility();\r\n      toggleClass( slide, CLASS_PREV, index === curr - 1 );\r\n      toggleClass( slide, CLASS_NEXT, index === curr + 1 );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the status related with activity.\r\n   */\r\n  function updateActivity(): void {\r\n    const active = isActive();\r\n\r\n    if ( active !== hasClass( slide, CLASS_ACTIVE ) ) {\r\n      toggleClass( slide, CLASS_ACTIVE, active );\r\n      setAttribute( slide, ARIA_CURRENT, isNavigation && active || '' );\r\n      emit( active ? EVENT_ACTIVE : EVENT_INACTIVE, self );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates classes and attributes related with visibility.\r\n   * - Do not update aria-hidden on shifting to avoid Window Narrator from start reading contents.\r\n   * - If the slide has focus and gets hidden, moves focus to the active slide.\r\n   */\r\n  function updateVisibility(): void {\r\n    const visible = isVisible();\r\n    const hidden = ! visible && ( ! isActive() || isClone );\r\n\r\n    if ( ! Splide.state.is( [ MOVING, SCROLLING ] ) ) {\r\n      setAttribute( slide, ARIA_HIDDEN, hidden || '' );\r\n    }\r\n\r\n    setAttribute( queryAll( slide, options.focusableNodes || '' ), TAB_INDEX, hidden ? -1 : '' );\r\n\r\n    if ( slideFocus ) {\r\n      setAttribute( slide, TAB_INDEX, hidden ? -1 : 0 );\r\n    }\r\n\r\n    if ( visible !== hasClass( slide, CLASS_VISIBLE ) ) {\r\n      toggleClass( slide, CLASS_VISIBLE, visible );\r\n      emit( visible ? EVENT_VISIBLE : EVENT_HIDDEN, self );\r\n    }\r\n\r\n    if ( ! visible && document.activeElement === slide ) {\r\n      const Slide = Components.Slides.getAt( Splide.index );\r\n      Slide && focus( Slide.slide );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to the slider or the container.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    _style( ( useContainer && container ) || slide, prop, value );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is active or not.\r\n   *\r\n   * @return `true` if the slide is active.\r\n   */\r\n  function isActive(): boolean {\r\n    const { index: curr } = Splide;\r\n    return curr === index || ( options.cloneStatus && curr === slideIndex );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is visible or not.\r\n   */\r\n  function isVisible(): boolean {\r\n    if ( Splide.is( FADE ) ) {\r\n      return isActive();\r\n    }\r\n\r\n    const trackRect = rect( Components.Elements.track );\r\n    const slideRect = rect( slide );\r\n    const left      = resolve( 'left', true );\r\n    const right     = resolve( 'right', true );\r\n\r\n    return floor( trackRect[ left ] ) <= ceil( slideRect[ left ] )\r\n      && floor( slideRect[ right ] ) <= ceil( trackRect[ right ] );\r\n  }\r\n\r\n  /**\r\n   * Calculates how far this slide is from another slide and\r\n   * returns `true` if the distance is within the given number.\r\n   *\r\n   * @param from     - An index of a base slide.\r\n   * @param distance - `true` if the slide is within this number.\r\n   *\r\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\r\n   */\r\n  function isWithin( from: number, distance: number ): boolean {\r\n    let diff = abs( from - index );\r\n\r\n    if ( ! isClone && ( options.rewind || Splide.is( LOOP ) ) ) {\r\n      diff = min( diff, Splide.length - diff );\r\n    }\r\n\r\n    return diff <= distance;\r\n  }\r\n\r\n  const self = {\r\n    index,\r\n    slideIndex,\r\n    slide,\r\n    container,\r\n    isClone,\r\n    mount,\r\n    destroy,\r\n    update,\r\n    style,\r\n    isWithin,\r\n  };\r\n\r\n  return self;\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the autoplay interval duration.\r\n *\r\n * @since 3.5.0\r\n */\r\nexport const INTERVAL_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-interval`;\r\n","/**\r\n * AddEventListenerOptions for listeners that may prevent the browser scroll.\r\n *\r\n * @since 3.4.1\r\n */\r\nexport const SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../../constants/arrows';\r\nimport { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * The map to associate a non-standard name to the standard one.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const NORMALIZATION_MAP = {\r\n  Spacebar: ' ',\r\n  Right   : ARROW_RIGHT,\r\n  Left    : ARROW_LEFT,\r\n  Up      : ARROW_UP,\r\n  Down    : ARROW_DOWN,\r\n};\r\n\r\n/**\r\n * Normalizes the key.\r\n *\r\n * @param key - A string or a KeyboardEvent object.\r\n *\r\n * @return A normalized key.\r\n */\r\nexport function normalizeKey( key: string | KeyboardEvent ): string {\r\n  key = isString( key ) ? key : key.key;\r\n  return NORMALIZATION_MAP[ key ] || key;\r\n}","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport { EVENT_MOVE, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { nextTick } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Keyboard component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface KeyboardComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The keyboard event name.\r\n *\r\n * @since 3.6.0\r\n */\r\nconst KEYBOARD_EVENT = 'keydown';\r\n\r\n/**\r\n * The component for controlling the slider by keyboards.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Keyboard component object.\r\n */\r\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\r\n  const { on, bind, unbind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * The target element of the keyboard event.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether the component is currently disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, destroy );\r\n    on( EVENT_UPDATED, init );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { keyboard } = options;\r\n\r\n    if ( keyboard ) {\r\n      target = keyboard === 'global' ? window : root;\r\n      bind( target, KEYBOARD_EVENT, onKeydown );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    unbind( target, KEYBOARD_EVENT );\r\n  }\r\n\r\n  /**\r\n   * Disables the keyboard input.\r\n   *\r\n   * @param value - Toggles disabling/enabling the keyboard input.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  /**\r\n   * Called when the slider moves.\r\n   * To avoid the slider from moving twice, wait for a tick.\r\n   */\r\n  function onMove(): void {\r\n    const _disabled = disabled;\r\n    disabled = true;\r\n    nextTick( () => { disabled = _disabled } );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the target.\r\n   *\r\n   * @param e - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( e: KeyboardEvent ): void {\r\n    if ( ! disabled ) {\r\n      const key = normalizeKey( e );\r\n\r\n      if ( key === resolve( ARROW_LEFT ) ) {\r\n        Splide.go( '<' );\r\n      } else if ( key === resolve( ARROW_RIGHT ) ) {\r\n        Splide.go( '>' );\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    disable,\r\n  };\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the src value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\r\n\r\n/**\r\n * The data attribute for the srcset value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\r\n\r\n/**\r\n * The selector string for images to load.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\r\n","import { ARIA_ORIENTATION } from '../../constants/attributes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_CLICK,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { apply, empty, includes, isUndefined, prevent, setAttribute } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Sync component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface SyncComponent extends BaseComponent {\r\n  remount(): void;\r\n}\r\n\r\n/**\r\n * The keys for triggering the navigation slide.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst TRIGGER_KEYS = [ ' ', 'Enter' ];\r\n\r\n/**\r\n * The component for syncing multiple sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Sync component object.\r\n */\r\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\r\n  const { isNavigation, slideFocus } = options;\r\n\r\n  /**\r\n   * Stores event objects.\r\n   */\r\n  const events: EventInterfaceObject[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Splide.splides.forEach( target => {\r\n      if ( ! target.isParent ) {\r\n        sync( Splide, target.splide );\r\n        sync( target.splide, Splide );\r\n      }\r\n    } );\r\n\r\n    if ( isNavigation ) {\r\n      navigate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    events.forEach( event => { event.destroy() } );\r\n    empty( events );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   *\r\n   * @internal\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Syncs the current index with a provided child splide instance.\r\n   *\r\n   * @param splide - A splide instance to sync with.\r\n   * @param target - A target splide instance.\r\n   */\r\n  function sync( splide: Splide, target: Splide ): void {\r\n    const event = EventInterface( splide );\r\n\r\n    event.on( EVENT_MOVE, ( index, prev, dest ) => {\r\n      target.go( target.is( LOOP ) ? dest : index );\r\n    } );\r\n\r\n    events.push( event );\r\n  }\r\n\r\n  /**\r\n   * Makes slides clickable and moves the slider to the index of clicked slide.\r\n   * Note that the direction of `menu` is implicitly `vertical` as default.\r\n   */\r\n  function navigate(): void {\r\n    const event = EventInterface( Splide );\r\n    const { on } = event;\r\n\r\n    on( EVENT_CLICK, onClick );\r\n    on( EVENT_SLIDE_KEYDOWN, onKeydown );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], update );\r\n\r\n    events.push( event );\r\n    event.emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\r\n  }\r\n\r\n  /**\r\n   * Update attributes.\r\n   */\r\n  function update(): void {\r\n    setAttribute( Components.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? 'vertical' : '' );\r\n  }\r\n\r\n  /**\r\n   * Called when the navigation slide is clicked.\r\n   *\r\n   * @param Slide - A clicked Slide component.\r\n   */\r\n  function onClick( Slide: SlideComponent ): void {\r\n    Splide.go( Slide.index );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the navigation slide.\r\n   *\r\n   * @param Slide - A Slide component.\r\n   * @param e     - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( Slide: SlideComponent, e: KeyboardEvent ): void {\r\n    if ( includes( TRIGGER_KEYS, normalizeKey( e ) ) ) {\r\n      onClick( Slide );\r\n      prevent( e );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup: apply(\r\n      Components.Media.set,\r\n      { slideFocus: isUndefined( slideFocus ) ? isNavigation : slideFocus },\r\n      true\r\n    ),\r\n    mount,\r\n    destroy,\r\n    remount,\r\n  };\r\n}\r\n","import { MEDIA_PREFERS_REDUCED_MOTION } from '../../constants/media';\r\nimport { CREATED, DESTROYED } from '../../constants/states';\r\nimport { EventBinder } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { merge, omit, ownKeys } from '../../utils';\r\nimport { EVENT_UPDATED } from '../../constants/events';\r\n\r\n\r\n/**\r\n * The interface for the Media component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface MediaComponent extends BaseComponent {\r\n  /** @internal */\r\n  reduce( reduced: boolean ): void;\r\n  set( options: Options, base?: boolean, notify?: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component for observing media queries and updating options if necessary.\r\n * This used to be the Options component.\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Media component object.\r\n */\r\nexport function Media( Splide: Splide, Components: Components, options: Options ): MediaComponent {\r\n  const { state } = Splide;\r\n  const breakpoints   = options.breakpoints || {};\r\n  const reducedMotion = options.reducedMotion || {};\r\n  const binder        = EventBinder();\r\n\r\n  /**\r\n   * Stores options and MediaQueryList object.\r\n   */\r\n  const queries: Array<[ Options, MediaQueryList ]> = [];\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    const isMin = options.mediaQuery === 'min';\r\n\r\n    ownKeys( breakpoints )\r\n      .sort( ( n, m ) => isMin ? +n - +m : +m - +n )\r\n      .forEach( key => {\r\n        register( breakpoints[ key ], `(${ isMin ? 'min' : 'max' }-width:${ key }px)` );\r\n      } );\r\n\r\n    register( reducedMotion, MEDIA_PREFERS_REDUCED_MOTION );\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Will be `true` for complete destruction.\r\n   */\r\n  function destroy( completely: boolean ): void {\r\n    if ( completely ) {\r\n      binder.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers entries as [ Options, media query string ].\r\n   *\r\n   * @param options - Options merged to current options when the document matches the query.\r\n   * @param query   - A query string.\r\n   */\r\n  function register( options: Options, query: string ): void {\r\n    const queryList = matchMedia( query );\r\n    binder.bind( queryList, 'change', update );\r\n    queries.push( [ options, queryList ] );\r\n  }\r\n\r\n  /**\r\n   * Checks all media queries in entries and updates options.\r\n   */\r\n  function update(): void {\r\n    const destroyed = state.is( DESTROYED );\r\n    const direction = options.direction;\r\n    const merged = queries.reduce<Options>( ( merged, entry ) => {\r\n      return merge( merged, entry[ 1 ].matches ? entry[ 0 ] : {} );\r\n    }, {} );\r\n\r\n    omit( options );\r\n    set( merged );\r\n\r\n    if ( options.destroy ) {\r\n      Splide.destroy( options.destroy === 'completely' );\r\n    } else if ( destroyed ) {\r\n      destroy( true );\r\n      Splide.mount();\r\n    } else {\r\n      direction !== options.direction && Splide.refresh();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables or enables `reducedMotion` options.\r\n   * This method does nothing when the document does not match the query.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param enable - Determines whether to apply `reducedMotion` options or not.\r\n   */\r\n  function reduce( enable: boolean ): void {\r\n    if ( matchMedia( MEDIA_PREFERS_REDUCED_MOTION ).matches ) {\r\n      enable ? merge( options, reducedMotion ) : omit( options, ownKeys( reducedMotion ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets current options or base options (prototype).\r\n   * If changing base options, always emits the `updated` event.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param opts   - New options.\r\n   * @param base   - Optional. Determines whether to also update base options or not.\r\n   * @param notify - Optional. If `true`, always emits the `update` event.\r\n   */\r\n  function set( opts: Options, base?: boolean, notify?: boolean ): void {\r\n    merge( options, opts );\r\n    base && merge( Object.getPrototypeOf( options ), opts );\r\n\r\n    if ( notify || ! state.is( CREATED ) ) {\r\n      Splide.emit( EVENT_UPDATED, options );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    destroy,\r\n    reduce,\r\n    set,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_ROLEDESCRIPTION, ROLE } from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_ARROW_NEXT,\r\n  CLASS_ARROW_PREV,\r\n  CLASS_ARROWS,\r\n  CLASS_CLONE,\r\n  CLASS_FOCUS_IN,\r\n  CLASS_LIST,\r\n  CLASS_PAGINATION,\r\n  CLASS_PROGRESS_BAR,\r\n  CLASS_ROOT,\r\n  CLASS_SLIDE,\r\n  CLASS_TOGGLE,\r\n  CLASS_TRACK,\r\n} from '../../constants/classes';\r\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { PROJECT_CODE } from '../../constants/project';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  assert,\r\n  assign,\r\n  child,\r\n  children,\r\n  empty,\r\n  forOwn,\r\n  getAttribute,\r\n  push,\r\n  query,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  toggleClass,\r\n  uniqueId,\r\n} from '../../utils';\r\nimport { closest } from '../../utils/dom/closest/closest';\r\nimport { POINTER_DOWN_EVENTS } from '../Drag/constants';\r\n\r\n\r\n/**\r\n * The interface for elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementCollection {\r\n  root: HTMLElement;\r\n  track: HTMLElement;\r\n  list: HTMLElement;\r\n  slides: HTMLElement[];\r\n  arrows?: HTMLElement;\r\n  pagination?: HTMLUListElement;\r\n  prev?: HTMLButtonElement;\r\n  next?: HTMLButtonElement;\r\n  bar?: HTMLElement;\r\n  toggle?: HTMLElement;\r\n}\r\n\r\n/**\r\n * The interface for the Elements component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\r\n}\r\n\r\n/**\r\n * The component that collects and handles elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Elements component object.\r\n */\r\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\r\n  const { on, bind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { i18n } = options;\r\n  const elements: ElementCollection = {} as ElementCollection;\r\n\r\n  /**\r\n   * Stores all slide elements.\r\n   */\r\n  const slides: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Stores all root classes.\r\n   */\r\n  let rootClasses: string[] = [];\r\n\r\n  /**\r\n   * Stores all list classes.\r\n   */\r\n  let trackClasses: string[] = [];\r\n\r\n  /**\r\n   * The track element.\r\n   */\r\n  let track: HTMLElement;\r\n\r\n  /**\r\n   * The list element.\r\n   */\r\n  let list: HTMLElement;\r\n\r\n  /**\r\n   * Turns into `true` when detecting keydown, and `false` when detecting pointerdown.\r\n   */\r\n  let isUsingKey: boolean;\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    collect();\r\n    init();\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, setup );\r\n    on( EVENT_UPDATED, update );\r\n\r\n    bind( document, `${ POINTER_DOWN_EVENTS } keydown`, e => {\r\n      isUsingKey = e.type === 'keydown';\r\n    }, { capture: true } );\r\n\r\n    bind( root, 'focusin', () => {\r\n      toggleClass( root, CLASS_FOCUS_IN, !! isUsingKey );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Whether to destroy the component completely or not.\r\n   */\r\n  function destroy( completely?: boolean ): void {\r\n    const attrs = ALL_ATTRIBUTES.concat( 'style' );\r\n\r\n    empty( slides );\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n    removeAttribute( [ track, list ], attrs );\r\n    removeAttribute( root, completely ? attrs : [ 'style', ARIA_ROLEDESCRIPTION ] );\r\n  }\r\n\r\n  /**\r\n   * Updates the status of elements.\r\n   */\r\n  function update(): void {\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n\r\n    rootClasses  = getClasses( CLASS_ROOT );\r\n    trackClasses = getClasses( CLASS_TRACK );\r\n\r\n    addClass( root, rootClasses );\r\n    addClass( track, trackClasses );\r\n\r\n    setAttribute( root, ARIA_LABEL, options.label );\r\n    setAttribute( root, ARIA_LABELLEDBY, options.labelledby );\r\n  }\r\n\r\n  /**\r\n   * Collects elements which the slider consists of.\r\n   */\r\n  function collect(): void {\r\n    track = find( `.${ CLASS_TRACK }` );\r\n    list  = child( track, `.${ CLASS_LIST }` );\r\n\r\n    assert( track && list, 'A track/list element is missing.' );\r\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\r\n\r\n    forOwn( {\r\n      arrows    : CLASS_ARROWS,\r\n      pagination: CLASS_PAGINATION,\r\n      prev      : CLASS_ARROW_PREV,\r\n      next      : CLASS_ARROW_NEXT,\r\n      bar       : CLASS_PROGRESS_BAR,\r\n      toggle    : CLASS_TOGGLE,\r\n    }, ( className, key ) => {\r\n      elements[ key ] = find( `.${ className }` );\r\n    } );\r\n\r\n    assign( elements, { root, track, list, slides } );\r\n  }\r\n\r\n  /**\r\n   * Initializes essential elements.\r\n   * Note that do not change the role of the root element,\r\n   * which removes the region from the accessibility tree.\r\n   */\r\n  function init(): void {\r\n    const id   = root.id || uniqueId( PROJECT_CODE );\r\n    const role = options.role;\r\n\r\n    root.id  = id;\r\n    track.id = track.id || `${ id }-track`;\r\n    list.id  = list.id || `${ id }-list`;\r\n\r\n    if ( ! getAttribute( root, ROLE ) && root.tagName !== 'SECTION' && role ) {\r\n      setAttribute( root, ROLE, role );\r\n    }\r\n\r\n    setAttribute( root, ARIA_ROLEDESCRIPTION, i18n.carousel );\r\n    setAttribute( list, ROLE, 'presentation' );\r\n  }\r\n\r\n  /**\r\n   * Finds an element only in this slider, ignoring elements in a nested slider.\r\n   *\r\n   * @return A found element or null.\r\n   */\r\n  function find( selector: string ): HTMLElement | undefined {\r\n    const elm = query<HTMLElement>( root, selector );\r\n    return elm && closest( elm, `.${ CLASS_ROOT }` ) === root ? elm : undefined;\r\n  }\r\n\r\n  /**\r\n   * Return an array with modifier classes.\r\n   *\r\n   * @param base - A base class name.\r\n   *\r\n   * @return An array with classes.\r\n   */\r\n  function getClasses( base: string ): string[] {\r\n    return [\r\n      `${ base }--${ options.type }`,\r\n      `${ base }--${ options.direction }`,\r\n      options.drag && `${ base }--draggable`,\r\n      options.isNavigation && `${ base }--nav`,\r\n      base === CLASS_ROOT && CLASS_ACTIVE,\r\n    ];\r\n  }\r\n\r\n  return assign( elements, {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n  } );\r\n}\r\n","import { isFunction } from '../../type/type';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Starts from the provided element, searches for the first element that matches the selector in ascendants.\r\n *\r\n * @param from     - An element to search from.\r\n * @param selector - A selector.\r\n *\r\n * @return The found element if available, or `null`.\r\n */\r\nexport function closest( from: HTMLElement, selector: string ): HTMLElement | null {\r\n  if ( isFunction( from.closest ) ) {\r\n    return from.closest( selector );\r\n  }\r\n\r\n  let elm: HTMLElement | null = from;\r\n\r\n  while ( elm && elm.nodeType === 1 ) {\r\n    if ( matches( elm, selector ) ) {\r\n      break;\r\n    }\r\n\r\n    elm = elm.parentElement;\r\n  }\r\n\r\n  return elm;\r\n}","import { EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append,\r\n  apply,\r\n  before,\r\n  between,\r\n  empty,\r\n  forEach as forEachItem,\r\n  includes,\r\n  isFunction,\r\n  isHTMLElement,\r\n  isString,\r\n  matches,\r\n  parseHtml,\r\n  queryAll,\r\n  remove as removeNode,\r\n  toArray,\r\n} from '../../utils';\r\nimport { Slide, SlideComponent } from './Slide';\r\n\r\n\r\n/**\r\n * The interface for the Slides component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface SlidesComponent extends BaseComponent {\r\n  update(): void;\r\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\r\n  get( excludeClones?: boolean ): SlideComponent[];\r\n  getIn( page: number ): SlideComponent[];\r\n  getAt( index: number ): SlideComponent | undefined;\r\n  add( slide: string | Element | Array<string | Element>, index?: number ): void;\r\n  remove( selector: SlideMatcher ): void;\r\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\r\n  filter( matcher: SlideMatcher ): SlideComponent[];\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  getLength( excludeClones?: boolean ): number;\r\n  isEnough(): boolean;\r\n}\r\n\r\n/**\r\n * The iteratee function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\r\n\r\n/**\r\n * The predicate function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\r\n\r\n/**\r\n * The type for filtering SlideComponent objects.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\r\n\r\n/**\r\n * The component for managing all slides include clones.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Slides component object.\r\n */\r\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\r\n  const { on, emit, bind } = EventInterface( Splide );\r\n  const { slides, list } = Components.Elements;\r\n\r\n  /**\r\n   * Stores all SlideComponent objects.\r\n   */\r\n  const Slides: SlideComponent[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    forEach( Slide => { Slide.destroy() } );\r\n    empty( Slides );\r\n  }\r\n\r\n  /**\r\n   * Manually updates the status of all slides.\r\n   */\r\n  function update(): void {\r\n    forEach( Slide => { Slide.update() } );\r\n  }\r\n\r\n  /**\r\n   * Registers a slide element and creates a Slide object.\r\n   * Needs to sort every time when a new slide is registered especially for clones.\r\n   *\r\n   * @param slide      - A slide element to register.\r\n   * @param index      - A slide index.\r\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\r\n   */\r\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\r\n    const object = Slide( Splide, index, slideIndex, slide );\r\n    object.mount();\r\n    Slides.push( object );\r\n    Slides.sort( ( Slide1, Slide2 ) => Slide1.index - Slide2.index );\r\n  }\r\n\r\n  /**\r\n   * Returns all Slide objects.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return An array with Slide objects.\r\n   */\r\n  function get( excludeClones?: boolean ): SlideComponent[] {\r\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\r\n  }\r\n\r\n  /**\r\n   * Returns slides in the specified page.\r\n   *\r\n   * @param page - A page index.\r\n   *\r\n   * @return An array with slides that belong to the page.\r\n   */\r\n  function getIn( page: number ): SlideComponent[] {\r\n    const { Controller } = Components;\r\n    const index = Controller.toIndex( page );\r\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\r\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\r\n  }\r\n\r\n  /**\r\n   * Returns a Slide object at the specified index.\r\n   *\r\n   * @param index - A slide index.\r\n   *\r\n   * @return A Slide object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): SlideComponent | undefined {\r\n    return filter( index )[ 0 ];\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide or slides at a specified index.\r\n   *\r\n   * @param items - A slide element, an HTML string or an array with them.\r\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\r\n   */\r\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\r\n    forEachItem( items, slide => {\r\n      if ( isString( slide ) ) {\r\n        slide = parseHtml( slide );\r\n      }\r\n\r\n      if ( isHTMLElement( slide ) ) {\r\n        const ref = slides[ index ];\r\n        ref ? before( slide, ref ) : append( list, slide );\r\n        addClass( slide, options.classes.slide );\r\n        observeImages( slide, apply( emit, EVENT_RESIZE ) );\r\n      }\r\n    } );\r\n\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  function remove( matcher: SlideMatcher ): void {\r\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Iterates over Slide objects by the iteratee function.\r\n   *\r\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   */\r\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\r\n    get( excludeClones ).forEach( iteratee );\r\n  }\r\n\r\n  /**\r\n   * Filters Slides by the matcher\r\n   * that can be an index, an array with indices, a selector, or a predicate function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or a predicate function.\r\n   *\r\n   * @return An array with SlideComponent objects.\r\n   */\r\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\r\n    return Slides.filter( isFunction( matcher )\r\n      ? matcher\r\n      : Slide => isString( matcher )\r\n        ? matches( Slide.slide, matcher )\r\n        : includes( toArray( matcher ), Slide.index )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to all slides or containers.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    forEach( Slide => { Slide.style( prop, value, useContainer ) } );\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback after all images in the element are loaded.\r\n   *\r\n   * @param elm      - An element that may contain images.\r\n   * @param callback - A callback function.\r\n   */\r\n  function observeImages( elm: Element, callback: AnyFunction ): void {\r\n    const images = queryAll( elm, 'img' );\r\n    let { length } = images;\r\n\r\n    if ( length ) {\r\n      images.forEach( img => {\r\n        bind( img, 'load error', () => {\r\n          if ( ! --length ) {\r\n            callback();\r\n          }\r\n        } );\r\n      } );\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the length of slides.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return The length of slides.\r\n   */\r\n  function getLength( excludeClones?: boolean ): number {\r\n    return excludeClones ? slides.length : Slides.length;\r\n  }\r\n\r\n  /**\r\n   * Checks if the number of slides is over than the `perPage` option, including clones.\r\n   *\r\n   * @return `true` if there are enough slides, or otherwise `false`.\r\n   */\r\n  function isEnough(): boolean {\r\n    return Slides.length > options.perPage;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    update,\r\n    register,\r\n    get,\r\n    getIn,\r\n    getAt,\r\n    add,\r\n    remove,\r\n    forEach,\r\n    filter,\r\n    style,\r\n    getLength,\r\n    isEnough,\r\n  };\r\n}\r\n","import { TTB } from '../../constants/directions';\r\nimport { EVENT_OVERFLOW, EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface, Throttle } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, assert, isObject, rect, style, toggleClass, unit } from '../../utils';\r\nimport { FADE } from '../../constants/types';\r\nimport { CLASS_OVERFLOW } from '../../constants/classes';\r\n\r\n\r\n/**\r\n * The interface for the Layout component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LayoutComponent extends BaseComponent {\r\n  listSize(): number;\r\n  slideSize( index: number, withoutGap?: boolean ): number;\r\n  sliderSize( withoutGap?: boolean ): number;\r\n  totalSize( index?: number, withoutGap?: boolean ): number;\r\n  getPadding( right: boolean ): number;\r\n  isOverflow(): boolean;\r\n\r\n  /** @internal */\r\n  resize( force?: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component that adjusts slider styles and provides methods for dimensions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Layout component object.\r\n */\r\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const { Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n  const { root, track, list } = Components.Elements;\r\n  const { getAt, style: styleSlides } = Slides;\r\n\r\n  /**\r\n   * Indicates whether the slider direction is vertical or not.\r\n   */\r\n  let vertical: boolean;\r\n\r\n  /**\r\n   * Keeps the DOMRect object of the root element.\r\n   */\r\n  let rootRect: DOMRect;\r\n\r\n  /**\r\n   * Turns into `true` when the carousel is wider than the list.\r\n   */\r\n  let overflow: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    bind( window, 'resize load', Throttle( apply( emit, EVENT_RESIZE ) ) );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n    on( EVENT_RESIZE, resize );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component on `mount` or `updated`.\r\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\r\n   */\r\n  function init(): void {\r\n    vertical = options.direction === TTB;\r\n\r\n    style( root, 'maxWidth', unit( options.width ) );\r\n    style( track, resolve( 'paddingLeft' ), cssPadding( false ) );\r\n    style( track, resolve( 'paddingRight' ), cssPadding( true ) );\r\n\r\n    resize( true );\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions of some elements when the carousel is resized.\r\n   * Also checks the carousel size and emits `overflow` events when it exceeds the list width.\r\n   *\r\n   * @param force - Skips checking the root dimension change and always performs the resizing process.\r\n   */\r\n  function resize( force?: boolean ): void {\r\n    const newRect = rect( root );\r\n\r\n    if ( force || rootRect.width !== newRect.width || rootRect.height !== newRect.height ) {\r\n      style( track, 'height', cssTrackHeight() );\r\n\r\n      styleSlides( resolve( 'marginRight' ), unit( options.gap ) );\r\n      styleSlides( 'width', cssSlideWidth() );\r\n      styleSlides( 'height', cssSlideHeight(), true );\r\n\r\n      rootRect = newRect;\r\n      emit( EVENT_RESIZED );\r\n\r\n      if ( overflow !== ( overflow = isOverflow() ) ) {\r\n        toggleClass( root, CLASS_OVERFLOW, overflow );\r\n        emit( EVENT_OVERFLOW, overflow );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the padding option and returns the value for each side.\r\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value as a CSS string.\r\n   */\r\n  function cssPadding( right: boolean ): string {\r\n    const { padding } = options;\r\n    const prop = resolve( right ? 'right' : 'left' );\r\n    return padding\r\n      && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) )\r\n      || '0px';\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the track element as a CSS string.\r\n   *\r\n   * @return The height of the track.\r\n   */\r\n  function cssTrackHeight(): string {\r\n    let height = '';\r\n\r\n    if ( vertical ) {\r\n      height = cssHeight();\r\n      assert( height, 'height or heightRatio is missing.' );\r\n      height = `calc(${ height } - ${ cssPadding( false ) } - ${ cssPadding( true ) })`;\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * Converts options related with height to a CSS string.\r\n   *\r\n   * @return The height as a CSS string if available, or otherwise an empty string.\r\n   */\r\n  function cssHeight(): string {\r\n    return unit( options.height || rect( list ).width * options.heightRatio );\r\n  }\r\n\r\n  /**\r\n   * Returns the width of the slide as a CSS string.\r\n   *\r\n   * @return The width of the slide.\r\n   */\r\n  function cssSlideWidth(): string | null {\r\n    return options.autoWidth\r\n      ? null\r\n      : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the slide as a CSS string.\r\n   *\r\n   * @return The height of the slide.\r\n   */\r\n  function cssSlideHeight(): string | null {\r\n    return unit( options.fixedHeight )\r\n      || ( vertical ? ( options.autoHeight ? null : cssSlideSize() ) : cssHeight() );\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS string for slide width or height without gap.\r\n   *\r\n   * @return The CSS string for slide width or height.\r\n   */\r\n  function cssSlideSize(): string {\r\n    const gap = unit( options.gap );\r\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\r\n  }\r\n\r\n  /**\r\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @return The size of the list element in pixel.\r\n   */\r\n  function listSize(): number {\r\n    return rect( list )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @param index      - Optional. A slide index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\r\n   *\r\n   * @return The size of the specified slide element in pixel.\r\n   */\r\n  function slideSize( index?: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index || 0 );\r\n    return Slide\r\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\r\n      : 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width or height of slides from the head of the slider to the specified index.\r\n   * This includes sizes of clones before the first slide.\r\n   *\r\n   * @param index      - A slide index. If omitted, uses the last index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\r\n   */\r\n  function totalSize( index: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index );\r\n\r\n    if ( Slide ) {\r\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\r\n      const left  = rect( list )[ resolve( 'left' ) ];\r\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the slider size without clones before the first slide.\r\n   * Do not use the clone's size because it's unstable while initializing and refreshing process.\r\n   *\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The width or height of the slider without clones.\r\n   */\r\n  function sliderSize( withoutGap?: boolean ): number {\r\n    return totalSize( Splide.length - 1 ) - totalSize( 0 ) + slideSize( 0, withoutGap );\r\n  }\r\n\r\n  /**\r\n   * Returns the gap value in pixel by using the computed style of the first slide.\r\n   *\r\n   * @return The gap value in pixel.\r\n   */\r\n  function getGap(): number {\r\n    const Slide = getAt( 0 );\r\n    return Slide && parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the padding value.\r\n   * This method resolves the difference of the direction.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value in pixel.\r\n   */\r\n  function getPadding( right: boolean ): number {\r\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }` ) ) ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if the carousel is wider than the list.\r\n   * This method always returns `true` for a fade carousel.\r\n   *\r\n   * @return `true` if the carousel is wider than the list, or otherwise `false`.\r\n   */\r\n  function isOverflow(): boolean {\r\n    return Splide.is( FADE ) || sliderSize( true ) > listSize();\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    resize,\r\n    listSize,\r\n    slideSize,\r\n    sliderSize,\r\n    totalSize,\r\n    getPadding,\r\n    isOverflow,\r\n  };\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { RequestInterval } from '../RequestInterval/RequestInterval';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\r\n  ( ...args: Parameters<F> ): void;\r\n}\r\n\r\n/**\r\n * Returns the throttled function.\r\n *\r\n * @param func     - A function to throttle.\r\n * @param duration - Optional. Throttle duration in milliseconds.\r\n *\r\n * @return A throttled function.\r\n */\r\nexport function Throttle<F extends AnyFunction>(\r\n  func: F,\r\n  duration?: number\r\n): ThrottleInstance<F> {\r\n  const interval = RequestInterval( duration || 0, func, null, 1 );\r\n\r\n  return () => {\r\n    interval.isPaused() && interval.start();\r\n  };\r\n}\r\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { addClass, append, before, ceil, empty, isUndefined, pad, push, rect, remove } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Clone component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ClonesComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The multiplier to determine the number of clones.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const MULTIPLIER = 2;\r\n\r\n/**\r\n * The component that generates clones for the loop slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Clones component object.\r\n */\r\nexport function Clones( Splide: Splide, Components: Components, options: Options ): ClonesComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on } = event;\r\n  const { Elements, Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all cloned elements.\r\n   */\r\n  const clones: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Keeps the current number of clones.\r\n   */\r\n  let cloneCount: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * Needs to remount the component on refresh, otherwise `refresh` event will be triggered again while refreshing.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_REFRESH, remount );\r\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\r\n\r\n    if ( ( cloneCount = computeCloneCount() ) ) {\r\n      generate( cloneCount );\r\n      Components.Layout.resize( true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Destroys clones.\r\n   */\r\n  function destroy(): void {\r\n    remove( clones );\r\n    empty( clones );\r\n    event.destroy();\r\n  }\r\n\r\n  /**\r\n   * Observes the required clone count and refreshes the slider if necessary.\r\n   */\r\n  function observe(): void {\r\n    const count = computeCloneCount();\r\n\r\n    if ( cloneCount !== count ) {\r\n      if ( cloneCount < count || ! count ) {\r\n        event.emit( EVENT_REFRESH );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates the specified number of clones.\r\n   *\r\n   * @param count - The number of clones to generate for each side.\r\n   */\r\n  function generate( count: number ): void {\r\n    const slides = Slides.get().slice();\r\n    const { length } = slides;\r\n\r\n    if ( length ) {\r\n      while ( slides.length < count ) {\r\n        push( slides, slides );\r\n      }\r\n\r\n      push( slides.slice( -count ), slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\r\n        const isHead = index < count;\r\n        const clone  = cloneDeep( Slide.slide, index );\r\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\r\n        push( clones, clone );\r\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the provided element with removing the ID attribute.\r\n   *\r\n   * @param elm   - An element to clone.\r\n   * @param index - An index of the clone.\r\n   *\r\n   * @return A cloned element.\r\n   */\r\n  function cloneDeep( elm: HTMLElement, index: number ): HTMLElement {\r\n    const clone = elm.cloneNode( true ) as HTMLElement;\r\n    addClass( clone, options.classes.clone );\r\n    clone.id = `${ Splide.root.id }-clone${ pad( index + 1 ) }`;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of elements to generate.\r\n   * This always returns 0 if the slider type is not `'loop'`.\r\n   *\r\n   * @return The number of clones.\r\n   */\r\n  function computeCloneCount(): number {\r\n    let { clones } = options;\r\n\r\n    if ( ! Splide.is( LOOP ) ) {\r\n      clones = 0;\r\n    } else if ( isUndefined( clones ) ) {\r\n      const fixedSize  = options[ resolve( 'fixedWidth' ) ] && Components.Layout.slideSize( 0 );\r\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\r\n      clones = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage * MULTIPLIER;\r\n    }\r\n\r\n    return clones;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import {\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZED,\r\n  EVENT_SHIFTED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { IDLE, MOVING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, ceil, clamp, isUndefined, rect, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Move component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface MoveComponent extends BaseComponent {\r\n  move( dest: number, index: number, prev: number, callback?: AnyFunction ): void;\r\n  jump( index: number ): void;\r\n  translate( position: number, preventLoop?: boolean ): void;\r\n  shift( position: number, backwards: boolean ): number;\r\n  cancel(): void;\r\n  toIndex( position: number ): number;\r\n  toPosition( index: number, trimming?: boolean ): number;\r\n  getPosition(): number;\r\n  getLimit( max: boolean ): number;\r\n  exceededLimit( max?: boolean | undefined, position?: number ): boolean;\r\n\r\n  /** @internal */\r\n  reposition(): void;\r\n}\r\n\r\n/**\r\n * The component for moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Move component object.\r\n */\r\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { set } = Splide.state;\r\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { list, track } = Components.Elements;\r\n\r\n  /**\r\n   * Holds the Transition component.\r\n   */\r\n  let Transition: TransitionComponent;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Transition = Components.Transition;\r\n    on( [ EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH ], reposition );\r\n  }\r\n\r\n  /**\r\n   * Repositions the slider.\r\n   * - Do not call `cancel()` here because LazyLoad may emit resize while transitioning.\r\n   * - iOS Safari emits window resize event while the user swipes the slider because of the bottom bar.\r\n   */\r\n  function reposition(): void {\r\n    if ( ! Components.Controller.isBusy() ) {\r\n      Components.Scroll.cancel();\r\n      jump( Splide.index );\r\n      Components.Slides.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the dest index with the Transition component.\r\n   *\r\n   * @param dest     - A destination index to go to, including clones'.\r\n   * @param index    - A slide index.\r\n   * @param prev     - A previous index.\r\n   * @param callback - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function move( dest: number, index: number, prev: number, callback?: AnyFunction ): void {\r\n    if ( dest !== index && canShift( dest > prev ) ) {\r\n      cancel();\r\n      translate( shift( getPosition(), dest > prev ), true );\r\n    }\r\n\r\n    set( MOVING );\r\n    emit( EVENT_MOVE, index, prev, dest );\r\n\r\n    Transition.start( index, () => {\r\n      set( IDLE );\r\n      emit( EVENT_MOVED, index, prev, dest );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Jumps to the slide at the specified index.\r\n   *\r\n   * @param index - An index to jump to.\r\n   */\r\n  function jump( index: number ): void {\r\n    translate( toPosition( index, true ) );\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the provided position.\r\n   *\r\n   * @param position    - The position to move to.\r\n   * @param preventLoop - Optional. If `true`, sets the provided position as is.\r\n   */\r\n  function translate( position: number, preventLoop?: boolean ): void {\r\n    if ( ! Splide.is( FADE ) ) {\r\n      const destination = preventLoop ? position : loop( position );\r\n      style( list, 'transform', `translate${ resolve( 'X' ) }(${ destination }px)` );\r\n      position !== destination && emit( EVENT_SHIFTED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops the provided position if it exceeds bounds (limit indices).\r\n   *\r\n   * @param position - A position to loop.\r\n   */\r\n  function loop( position: number ): number {\r\n    if ( Splide.is( LOOP ) ) {\r\n      const index       = toIndex( position );\r\n      const exceededMax = index > Components.Controller.getEnd();\r\n      const exceededMin = index < 0;\r\n\r\n      if ( exceededMin || exceededMax ) {\r\n        position = shift( position, exceededMax );\r\n      }\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adds or subtracts the slider width to the provided position.\r\n   *\r\n   * @param position  - A position to shift.\r\n   * @param backwards - Determines whether to shift the slider backwards or forwards.\r\n   *\r\n   * @return The shifted position.\r\n   */\r\n  function shift( position: number, backwards: boolean ): number {\r\n    const excess = position - getLimit( backwards );\r\n    const size   = sliderSize();\r\n    position -= orient( size * ( ceil( abs( excess ) / size ) || 1 ) ) * ( backwards ? 1 : -1 );\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Cancels transition.\r\n   */\r\n  function cancel(): void {\r\n    translate( getPosition(), true );\r\n    Transition.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the closest index to the position.\r\n   *\r\n   * @param position - A position to convert.\r\n   *\r\n   * @return The closest index to the position.\r\n   */\r\n  function toIndex( position: number ): number {\r\n    const Slides = Components.Slides.get();\r\n\r\n    let index       = 0;\r\n    let minDistance = Infinity;\r\n\r\n    for ( let i = 0; i < Slides.length; i++ ) {\r\n      const slideIndex = Slides[ i ].index;\r\n      const distance   = abs( toPosition( slideIndex, true ) - position );\r\n\r\n      if ( distance <= minDistance ) {\r\n        minDistance = distance;\r\n        index       = slideIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the position.\r\n   *\r\n   * @param index    - An index to convert.\r\n   * @param trimming - Optional. Whether to trim edge spaces or not.\r\n   *\r\n   * @return The position corresponding with the index.\r\n   */\r\n  function toPosition( index: number, trimming?: boolean ): number {\r\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\r\n    return trimming ? trim( position ) : position;\r\n  }\r\n\r\n  /**\r\n   * Returns the current position.\r\n   *\r\n   * @return The position of the list element.\r\n   */\r\n  function getPosition(): number {\r\n    const left = resolve( 'left' );\r\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\r\n  }\r\n\r\n  /**\r\n   * Trims spaces on the edge of the slider.\r\n   *\r\n   * @param position - A position to trim.\r\n   *\r\n   * @return A trimmed position.\r\n   */\r\n  function trim( position: number ): number {\r\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\r\n      position = clamp( position, 0, orient( sliderSize( true ) - listSize() ) );\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Returns the offset amount.\r\n   *\r\n   * @param index - An index.\r\n   */\r\n  function offset( index: number ): number {\r\n    const { focus } = options;\r\n    return focus === 'center' ? ( listSize() - slideSize( index, true ) ) / 2 : +focus * slideSize( index ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the limit number that the slider can move to.\r\n   *\r\n   * @param max - Determines whether to return the maximum or minimum limit.\r\n   *\r\n   * @return The border number.\r\n   */\r\n  function getLimit( max: boolean ): number {\r\n    return toPosition( max ? Components.Controller.getEnd() : 0, !! options.trimSpace );\r\n  }\r\n\r\n  /**\r\n   * Checks if there is enough width to shift the slider.\r\n   *\r\n   * @param backwards - `true` for checking backwards, or `false` for doing forwards.\r\n   *\r\n   * @return `true` if the slider can be shifted for the specified direction, or otherwise `false`.\r\n   */\r\n  function canShift( backwards: boolean ): boolean {\r\n    const shifted = orient( shift( getPosition(), backwards ) );\r\n    return backwards\r\n      ? shifted >= 0\r\n      : shifted <= list[ resolve( 'scrollWidth' ) ] - rect( track )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided position exceeds the minimum or maximum limit or not.\r\n   *\r\n   * @param max      - Optional. `true` for testing max, `false` for min, and `undefined` for both.\r\n   * @param position - Optional. A position to test. If omitted, tests the current position.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\r\n  function exceededLimit( max?: boolean | undefined, position?: number ): boolean {\r\n    position = isUndefined( position ) ? getPosition() : position;\r\n    const exceededMin = max !== true && orient( position ) < orient( getLimit( false ) );\r\n    const exceededMax = max !== false && orient( position ) > orient( getLimit( true ) );\r\n    return exceededMin || exceededMax;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    move,\r\n    jump,\r\n    translate,\r\n    shift,\r\n    cancel,\r\n    toIndex,\r\n    toPosition,\r\n    getPosition,\r\n    getLimit,\r\n    exceededLimit,\r\n    reposition,\r\n  };\r\n}\r\n","import { EVENT_END_INDEX_CHANGED, EVENT_REFRESH, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { apply, approximatelyEqual, between, clamp, floor, isString, isUndefined, min } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Controller component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ControllerComponent extends BaseComponent {\r\n  go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void;\r\n  scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  getNext( destination?: boolean ): number;\r\n  getPrev( destination?: boolean ): number;\r\n  getEnd(): number;\r\n  setIndex( index: number ): void;\r\n  getIndex( prev?: boolean ): number;\r\n  toIndex( page: number ): number;\r\n  toPage( index: number ): number;\r\n  toDest( position: number ): number;\r\n  hasFocus(): boolean;\r\n  isBusy(): boolean;\r\n\r\n  /** @internal */\r\n  getAdjacent( prev: boolean, destination?: boolean ): number;\r\n}\r\n\r\n/**\r\n * The component for controlling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Controller component object.\r\n */\r\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, toPosition } = Move;\r\n  const { isEnough, getLength } = Components.Slides;\r\n  const { omitEnd } = options;\r\n  const isLoop  = Splide.is( LOOP );\r\n  const isSlide = Splide.is( SLIDE );\r\n  const getNext = apply( getAdjacent, false );\r\n  const getPrev = apply( getAdjacent, true );\r\n\r\n  /**\r\n   * The current index.\r\n   */\r\n  let currIndex = options.start || 0;\r\n\r\n  /**\r\n   * The latest end index.\r\n   */\r\n  let endIndex: number;\r\n\r\n  /**\r\n   * The previous index.\r\n   */\r\n  let prevIndex = currIndex;\r\n\r\n  /**\r\n   * The latest number of slides.\r\n   */\r\n  let slideCount: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perMove: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perPage: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED ], init );\r\n    on( EVENT_RESIZED, onResized );\r\n  }\r\n\r\n  /**\r\n   * Initializes some parameters.\r\n   * Needs to check the number of slides since the current index may be out of the range after refresh.\r\n   * The process order must be Elements -> Controller -> Move.\r\n   */\r\n  function init(): void {\r\n    slideCount = getLength( true );\r\n    perMove    = options.perMove;\r\n    perPage    = options.perPage;\r\n    endIndex   = getEnd();\r\n\r\n    const index = clamp( currIndex, 0, omitEnd ? endIndex : slideCount - 1 );\r\n\r\n    if ( index !== currIndex ) {\r\n      currIndex = index;\r\n      Move.reposition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the viewport width is changed.\r\n   * The end index can change if `autoWidth` or `fixedWidth` is enabled.\r\n   */\r\n  function onResized(): void {\r\n    if ( endIndex !== getEnd() ) {\r\n      emit( EVENT_END_INDEX_CHANGED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider by the control pattern.\r\n   *\r\n   * @see `Splide#go()`\r\n   *\r\n   * @param control        - A control pattern.\r\n   * @param allowSameIndex - Optional. Determines whether to allow going to the current index or not.\r\n   * @param callback       - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void {\r\n    if ( ! isBusy() ) {\r\n      const dest  = parse( control );\r\n      const index = loop( dest );\r\n\r\n      if ( index > -1 && ( allowSameIndex || index !== currIndex ) ) {\r\n        setIndex( index );\r\n        Move.move( dest, index, prevIndex, callback );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the specified destination with updating indices.\r\n   *\r\n   * @param destination - The position to scroll the slider to.\r\n   * @param duration    - Optional. Specifies the scroll duration.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param callback    - Optional. A callback function invoked after scroll ends.\r\n   */\r\n  function scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void {\r\n    Components.Scroll.scroll( destination, duration, snap, () => {\r\n      const index = loop( Move.toIndex( getPosition() ) );\r\n      setIndex( omitEnd ? min( index, endIndex ) : index );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Parses the control and returns a slide index.\r\n   *\r\n   * @param control - A control pattern to parse.\r\n   *\r\n   * @return A `dest` index.\r\n   */\r\n  function parse( control: number | string ): number {\r\n    let index = currIndex;\r\n\r\n    if ( isString( control ) ) {\r\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\r\n\r\n      if ( indicator === '+' || indicator === '-' ) {\r\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex );\r\n      } else if ( indicator === '>' ) {\r\n        index = number ? toIndex( +number ) : getNext( true );\r\n      } else if ( indicator === '<' ) {\r\n        index = getPrev( true );\r\n      }\r\n    } else {\r\n      index = isLoop ? control : clamp( control, 0, endIndex );\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Returns an adjacent destination index.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param prev        - Determines whether to return a previous or next index.\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return An adjacent index if available, or otherwise `-1`.\r\n   */\r\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\r\n    const number = perMove || ( hasFocus() ? 1 : perPage );\r\n    const dest   = computeDestIndex( currIndex + number * ( prev ? -1 : 1 ), currIndex, ! ( perMove || hasFocus() ) );\r\n\r\n    if ( dest === -1 && isSlide ) {\r\n      if ( ! approximatelyEqual( getPosition(), getLimit( ! prev ), 1 ) ) {\r\n        return prev ? 0 : endIndex;\r\n      }\r\n    }\r\n\r\n    return destination ? dest : loop( dest );\r\n  }\r\n\r\n  /**\r\n   * Converts the desired destination index to the valid one.\r\n   * - If the `move` option is `true`, finds the dest index whose position is different with the current one.\r\n   * - This may return clone indices if the editor is the loop mode,\r\n   *   or `-1` if there is no slide to go.\r\n   * - There are still slides where the carousel can go if borders are between `from` and `dest`.\r\n   * - If `focus` is available, needs to calculate the dest index even if there are enough number of slides.\r\n   *\r\n   * @param dest     - The desired destination index.\r\n   * @param from     - A base index.\r\n   * @param snapPage - Optional. Whether to snap a page or not.\r\n   *\r\n   * @return A converted destination index, including clones.\r\n   */\r\n  function computeDestIndex( dest: number, from: number, snapPage?: boolean ): number {\r\n    if ( isEnough() || hasFocus() ) {\r\n      const index = computeMovableDestIndex( dest );\r\n\r\n      if ( index !== dest ) {\r\n        from     = dest;\r\n        dest     = index;\r\n        snapPage = false;\r\n      }\r\n\r\n      if ( dest < 0 || dest > endIndex ) {\r\n        if ( ! perMove && ( between( 0, dest, from, true ) || between( endIndex, from, dest, true ) ) ) {\r\n          dest = toIndex( toPage( dest ) );\r\n        } else {\r\n          if ( isLoop ) {\r\n            dest = snapPage\r\n              ? dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount\r\n              : dest;\r\n          } else if ( options.rewind ) {\r\n            dest = dest < 0 ? endIndex : 0;\r\n          } else {\r\n            dest = -1;\r\n          }\r\n        }\r\n      } else {\r\n        if ( snapPage && dest !== from ) {\r\n          dest = toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\r\n        }\r\n      }\r\n    } else {\r\n      dest = -1;\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Finds the dest index whose position is different with the current one for `trimSpace: 'move'`.\r\n   * This can be negative or greater than `length - 1`.\r\n   *\r\n   * @param dest - A dest index.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function computeMovableDestIndex( dest: number ): number {\r\n    if ( isSlide && options.trimSpace === 'move' && dest !== currIndex ) {\r\n      const position = getPosition();\r\n\r\n      while ( position === toPosition( dest, true ) && between( dest, 0, Splide.length - 1, ! options.rewind ) ) {\r\n        dest < currIndex ? --dest : ++dest;\r\n      }\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Loops the provided index only in the loop mode.\r\n   *\r\n   * @param index - An index to loop.\r\n   *\r\n   * @return A looped index.\r\n   */\r\n  function loop( index: number ): number {\r\n    return isLoop ? ( index + slideCount ) % slideCount || 0 : index;\r\n  }\r\n\r\n  /**\r\n   * Returns the end index where the slider can go.\r\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\r\n   * the slider can go to the slide 8 (the index is 7).\r\n   * If the `omitEnd` option is available, computes the index from the slide position.\r\n   *\r\n   * @return An end index.\r\n   */\r\n  function getEnd(): number {\r\n    let end = slideCount - ( hasFocus() || ( isLoop && perMove ) ? 1 : perPage );\r\n\r\n    while ( omitEnd && end-- > 0 ) {\r\n      if ( toPosition( slideCount - 1, true ) !== toPosition( end, true ) ) {\r\n        end++;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return clamp( end, 0, slideCount - 1 );\r\n  }\r\n\r\n  /**\r\n   * Converts the page index to the slide index.\r\n   *\r\n   * @param page - A page index to convert.\r\n   *\r\n   * @return A slide index.\r\n   */\r\n  function toIndex( page: number ): number {\r\n    return clamp( hasFocus() ? page : perPage * page, 0, endIndex );\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the page index.\r\n   *\r\n   * @param index - An index to convert.\r\n   *\r\n   * @return A page index.\r\n   */\r\n  function toPage( index: number ): number {\r\n    return hasFocus()\r\n      ? min( index, endIndex )\r\n      : floor( ( index >= endIndex ? slideCount - 1 : index ) / perPage );\r\n  }\r\n\r\n  /**\r\n   * Converts the destination position to the dest index.\r\n   *\r\n   * @param destination - A position to convert.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function toDest( destination: number ): number {\r\n    const closest = Move.toIndex( destination );\r\n    return isSlide ? clamp( closest, 0, endIndex ) : closest;\r\n  }\r\n\r\n  /**\r\n   * Sets a new index and retains old one.\r\n   *\r\n   * @param index - A new index to set.\r\n   */\r\n  function setIndex( index: number ): void {\r\n    if ( index !== currIndex ) {\r\n      prevIndex = currIndex;\r\n      currIndex = index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current/previous index.\r\n   *\r\n   * @param prev - Optional. Whether to return previous index or not.\r\n   */\r\n  function getIndex( prev?: boolean ): number {\r\n    return prev ? prevIndex : currIndex;\r\n  }\r\n\r\n  /**\r\n   * Verifies if the focus option is available or not.\r\n   *\r\n   * @return `true` if the slider has the focus option.\r\n   */\r\n  function hasFocus(): boolean {\r\n    return ! isUndefined( options.focus ) || options.isNavigation;\r\n  }\r\n\r\n  /**\r\n   * Checks if the slider is moving/scrolling or not.\r\n   *\r\n   * @return `true` if the slider can move, or otherwise `false`.\r\n   */\r\n  function isBusy(): boolean {\r\n    return Splide.state.is( [ MOVING, SCROLLING ] ) && !! options.waitForTransition;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    go,\r\n    scroll,\r\n    getNext,\r\n    getPrev,\r\n    getAdjacent,\r\n    getEnd,\r\n    setIndex,\r\n    getIndex,\r\n    toIndex,\r\n    toPage,\r\n    toDest,\r\n    hasFocus,\r\n    isBusy,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ARROWS } from '../../constants/classes';\r\nimport {\r\n  EVENT_ARROWS_MOUNTED,\r\n  EVENT_ARROWS_UPDATED,\r\n  EVENT_END_INDEX_CHANGED,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append,\r\n  apply,\r\n  assign,\r\n  before,\r\n  create,\r\n  display,\r\n  parseHtml,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\r\n\r\n\r\n/**\r\n * The interface for the Arrows component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ArrowsComponent extends BaseComponent {\r\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\r\n\r\n  /** @internal */\r\n  update(): void;\r\n}\r\n\r\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Arrows component object.\r\n */\r\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, bind, emit } = event;\r\n  const { classes, i18n } = options;\r\n  const { Elements, Controller } = Components;\r\n  const { arrows: placeholder, track } = Elements;\r\n\r\n  /**\r\n   * The wrapper element.\r\n   */\r\n  let wrapper = placeholder;\r\n\r\n  /**\r\n   * The previous arrow element.\r\n   */\r\n  let prev = Elements.prev;\r\n\r\n  /**\r\n   * The next arrow element.\r\n   */\r\n  let next = Elements.next;\r\n\r\n  /**\r\n   * Indicates whether the component creates arrows or retrieved from the DOM.\r\n   */\r\n  let created: boolean;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let wrapperClasses: string;\r\n\r\n  /**\r\n   * An object with previous and next arrows.\r\n   */\r\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, remount );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const enabled = options.arrows;\r\n\r\n    if ( enabled && ! ( prev && next ) ) {\r\n      createArrows();\r\n    }\r\n\r\n    if ( prev && next ) {\r\n      assign( arrows, { prev, next } );\r\n      display( wrapper, enabled ? '' : 'none' );\r\n      addClass( wrapper, ( wrapperClasses = `${ CLASS_ARROWS }--${ options.direction }` ) );\r\n\r\n      if ( enabled ) {\r\n        listen();\r\n        update();\r\n        setAttribute( [ prev, next ], ARIA_CONTROLS, track.id );\r\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    event.destroy();\r\n    removeClass( wrapper, wrapperClasses );\r\n\r\n    if ( created ) {\r\n      remove( placeholder ? [ prev, next ] : wrapper );\r\n      prev = next = null;\r\n    } else {\r\n      removeAttribute( [ prev, next ], ALL_ATTRIBUTES );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    on( [ EVENT_MOUNTED, EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED, EVENT_END_INDEX_CHANGED ], update );\r\n    bind( next, 'click', apply( go, '>' ) );\r\n    bind( prev, 'click', apply( go, '<' ) );\r\n  }\r\n\r\n  /**\r\n   * The wrapper function of Controller#go().\r\n   *\r\n   * @param control - The control pattern.\r\n   */\r\n  function go( control: string ): void {\r\n    Controller.go( control, true );\r\n  }\r\n\r\n  /**\r\n   * Create arrows and append them to the slider.\r\n   */\r\n  function createArrows(): void {\r\n    wrapper = placeholder || create( 'div', classes.arrows );\r\n    prev    = createArrow( true );\r\n    next    = createArrow( false );\r\n    created = true;\r\n\r\n    append( wrapper, [ prev, next ] );\r\n    ! placeholder && before( wrapper, track );\r\n  }\r\n\r\n  /**\r\n   * Creates an arrow button.\r\n   * In IE, A SVG element is focusable.\r\n   *\r\n   * @param prev - Determines whether to create a previous or next arrow.\r\n   *\r\n   * @return A created button element.\r\n   */\r\n  function createArrow( prev: boolean ): HTMLButtonElement {\r\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\r\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\" focusable=\"false\">`\r\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\r\n\r\n    return parseHtml<HTMLButtonElement>( arrow );\r\n  }\r\n\r\n  /**\r\n   * Updates status of arrows, such as `disabled` and `aria-label`.\r\n   */\r\n  function update(): void {\r\n    if ( prev && next ) {\r\n      const index     = Splide.index;\r\n      const prevIndex = Controller.getPrev();\r\n      const nextIndex = Controller.getNext();\r\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\r\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\r\n\r\n      prev.disabled = prevIndex < 0;\r\n      next.disabled = nextIndex < 0;\r\n\r\n      setAttribute( prev, ARIA_LABEL, prevLabel );\r\n      setAttribute( next, ARIA_LABEL, nextLabel );\r\n\r\n      emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\r\n    }\r\n  }\r\n\r\n  return {\r\n    arrows,\r\n    mount,\r\n    destroy,\r\n    update,\r\n  };\r\n}\r\n","/**\r\n * The namespace for SVG elements.\r\n */\r\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * The arrow path.\r\n */\r\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n\r\n/**\r\n * SVG width and height.\r\n */\r\nexport const SIZE = 40;\r\n","import { ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ACTIVE } from '../../constants/classes';\r\nimport {\r\n  EVENT_AUTOPLAY_PAUSE,\r\n  EVENT_AUTOPLAY_PLAY,\r\n  EVENT_AUTOPLAY_PLAYING,\r\n  EVENT_MOVE,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n} from '../../constants/events';\r\nimport { EventInterface, RequestInterval } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { getAttribute, setAttribute, style, toggleClass } from '../../utils';\r\nimport { INTERVAL_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Autoplay component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface AutoplayComponent extends BaseComponent {\r\n  play(): void;\r\n  pause(): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * The component for autoplay, handling a progress bar and a toggle button.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Autoplay component object.\r\n */\r\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), onAnimationFrame );\r\n  const { isPaused } = interval;\r\n  const { Elements, Elements: { root, toggle } } = Components;\r\n  const { autoplay } = options;\r\n\r\n  /**\r\n   * Indicates whether the slider is hovered or not.\r\n   */\r\n  let hovered: boolean;\r\n\r\n  /**\r\n   * Indicates whether one of slider elements has focus or not.\r\n   */\r\n  let focused: boolean;\r\n\r\n  /**\r\n   * Indicates whether the autoplay is stopped or not.\r\n   * If stopped, autoplay won't start automatically unless `play()` is explicitly called.\r\n   */\r\n  let stopped = autoplay === 'pause';\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( autoplay ) {\r\n      listen();\r\n      toggle && setAttribute( toggle, ARIA_CONTROLS, Elements.track.id );\r\n      stopped || play();\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    if ( options.pauseOnHover ) {\r\n      bind( root, 'mouseenter mouseleave', e => {\r\n        hovered = e.type === 'mouseenter';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( options.pauseOnFocus ) {\r\n      bind( root, 'focusin focusout', e => {\r\n        focused = e.type === 'focusin';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( toggle ) {\r\n      bind( toggle, 'click', () => {\r\n        stopped ? play() : pause( true );\r\n      } );\r\n    }\r\n\r\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Starts autoplay and clears all flags.\r\n   */\r\n  function play(): void {\r\n    if ( isPaused() && Components.Slides.isEnough() ) {\r\n      interval.start( ! options.resetProgress );\r\n      focused = hovered = stopped = false;\r\n      update();\r\n      emit( EVENT_AUTOPLAY_PLAY );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pauses autoplay.\r\n   *\r\n   * @param stop - If `true`, autoplay keeps paused until `play()` is explicitly called.\r\n   */\r\n  function pause( stop = true ): void {\r\n    stopped = !! stop;\r\n    update();\r\n\r\n    if ( ! isPaused() ) {\r\n      interval.pause();\r\n      emit( EVENT_AUTOPLAY_PAUSE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles play/pause according to current flags.\r\n   * If autoplay is manually paused, this will do nothing.\r\n   */\r\n  function autoToggle(): void {\r\n    if ( ! stopped ) {\r\n      hovered || focused ? pause( false ) : play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the toggle button status.\r\n   */\r\n  function update(): void {\r\n    if ( toggle ) {\r\n      toggleClass( toggle, CLASS_ACTIVE, ! stopped );\r\n      setAttribute( toggle, ARIA_LABEL, options.i18n[ stopped ? 'play' : 'pause' ] );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on every animation frame while autoplay is active.\r\n   *\r\n   * @param rate - The progress rate between 0 and 1.\r\n   */\r\n  function onAnimationFrame( rate: number ): void {\r\n    const { bar } = Elements;\r\n    bar && style( bar, 'width', `${ rate * 100 }%` );\r\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\r\n  }\r\n\r\n  /**\r\n   * Updates or restores the interval duration.\r\n   *\r\n   * @param index - An index to move to.\r\n   */\r\n  function onMove( index: number ): void {\r\n    const Slide = Components.Slides.getAt( index );\r\n    interval.set( Slide && +getAttribute( Slide.slide, INTERVAL_DATA_ATTRIBUTE ) || options.interval );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: interval.cancel,\r\n    play,\r\n    pause,\r\n    isPaused,\r\n  };\r\n}\r\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { apply, child, display } from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Cover component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface CoverComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for setting the image as the slide background.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Cover component object.\r\n */\r\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.cover ) {\r\n      on( EVENT_LAZYLOAD_LOADED, apply( toggle, true ) );\r\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply( cover, true ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from all slides.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   */\r\n  function cover( cover: boolean ): void {\r\n    Components.Slides.forEach( Slide => {\r\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\r\n\r\n      if ( img && img.src ) {\r\n        toggle( cover, img, Slide );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from the parent element.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   * @param img   - A target image element.\r\n   * @param Slide - A SlideComponent object where the image belongs.\r\n   */\r\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\r\n    Slide.style( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\r\n    display( img, cover ? 'none' : '' );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( cover, false ),\r\n  };\r\n}\r\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\r\nimport { IDLE, SCROLLING } from '../../constants/states';\r\nimport { SLIDE } from '../../constants/types';\r\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, approximatelyEqual, floor, max, sign } from '../../utils';\r\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Scroll component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ScrollComponent extends BaseComponent {\r\n  scroll( position: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  cancel(): void;\r\n}\r\n\r\n/**\r\n * The component for scrolling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Scroll component object.\r\n */\r\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { state: { set } } = Splide;\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, exceededLimit, translate } = Move;\r\n  const isSlide = Splide.is( SLIDE );\r\n\r\n  /**\r\n   * Retains the active RequestInterval object.\r\n   */\r\n  let interval: RequestIntervalInterface;\r\n\r\n  /**\r\n   * Holds the callback function.\r\n   */\r\n  let callback: AnyFunction;\r\n\r\n  /**\r\n   * The current friction (<= 1).\r\n   */\r\n  let friction = 1;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_MOVE, clear );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the provided destination.\r\n   *\r\n   * @param destination - The destination to scroll the slider to.\r\n   * @param duration    - Optional. The scroll duration. If omitted, calculates it by the distance.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param onScrolled  - Optional. A callback invoked after scroll ends.\r\n   * @param noConstrain - Optional. Whether to suppress constraint process when the slider exceeds bounds.\r\n   */\r\n  function scroll(\r\n    destination: number,\r\n    duration?: number,\r\n    snap?: boolean,\r\n    onScrolled?: AnyFunction,\r\n    noConstrain?: boolean\r\n  ): void {\r\n    const from = getPosition();\r\n\r\n    clear();\r\n\r\n    if ( snap && ( ! isSlide || ! exceededLimit() ) ) {\r\n      const size   = Components.Layout.sliderSize();\r\n      const offset = sign( destination ) * size * floor( abs( destination ) / size ) || 0;\r\n      destination = Move.toPosition( Components.Controller.toDest( destination % size ) ) + offset;\r\n    }\r\n\r\n    const noDistance = approximatelyEqual( from, destination, 1 );\r\n\r\n    friction = 1;\r\n    duration = noDistance ? 0 : duration || max( abs( destination - from ) / BASE_VELOCITY, MIN_DURATION );\r\n    callback = onScrolled;\r\n    interval = RequestInterval( duration, onEnd, apply( update, from, destination, noConstrain ), 1 );\r\n\r\n    set( SCROLLING );\r\n    emit( EVENT_SCROLL );\r\n    interval.start();\r\n  }\r\n\r\n  /**\r\n   * Called when scroll ends or has been just canceled.\r\n   */\r\n  function onEnd(): void {\r\n    set( IDLE );\r\n    callback && callback();\r\n    emit( EVENT_SCROLLED );\r\n  }\r\n\r\n  /**\r\n   * Called whenever the interval timer is updated.\r\n   *\r\n   * @param from        - A position where scroll starts.\r\n   * @param to          - A destination where the slider goes.\r\n   * @param noConstrain - Whether to suppress constraint process when the slider exceeds bounds.\r\n   * @param rate        - A current rate.\r\n   */\r\n  function update( from: number, to: number, noConstrain: boolean | undefined, rate: number ): void {\r\n    const position = getPosition();\r\n    const target   = from + ( to - from ) * easing( rate );\r\n    const diff     = ( target - position ) * friction;\r\n\r\n    translate( position + diff );\r\n\r\n    if ( isSlide && ! noConstrain && exceededLimit() ) {\r\n      friction *= FRICTION_FACTOR;\r\n\r\n      if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\r\n        scroll( getLimit( exceededLimit( true ) ), BOUNCE_DURATION, false, callback, true );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the active interval.\r\n   */\r\n  function clear(): void {\r\n    if ( interval ) {\r\n      interval.cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the active interval and emits the `scrolled` event.\r\n   */\r\n  function cancel(): void {\r\n    if ( interval && ! interval.isPaused() ) {\r\n      clear();\r\n      onEnd();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The easing function.\r\n   *\r\n   * @param t - A value to ease.\r\n   *\r\n   * @return An eased value.\r\n   */\r\n  function easing( t: number ): number {\r\n    const { easingFunc } = options;\r\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: clear,\r\n    scroll,\r\n    cancel,\r\n  };\r\n}\r\n","/**\r\n * Triggers the bounce effect when the diff becomes less than this value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DIFF_THRESHOLD = 10;\r\n\r\n/**\r\n * The duration of the bounce effect.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DURATION = 600;\r\n\r\n/**\r\n * The friction factor.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION_FACTOR = 0.6;\r\n\r\n/**\r\n * The velocity to calculate the scroll duration.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BASE_VELOCITY = 1.5;\r\n\r\n/**\r\n * The minimum duration of scroll.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const MIN_DURATION = 800;\r\n","import { CLASS_ARROW, CLASS_PAGINATION_PAGE } from '../../constants/classes';\r\nimport { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_MOUNTED, EVENT_UPDATED } from '../../constants/events';\r\nimport { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { DRAGGING, IDLE, MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, isObject, matches, min, noop, prevent, sign, timeOf } from '../../utils';\r\nimport { FRICTION, LOG_INTERVAL, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Drag component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DragComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n  isDragging(): boolean;\r\n}\r\n\r\n/**\r\n * The component for dragging the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Drag component object.\r\n */\r\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\r\n  const { on, emit, bind, unbind } = EventInterface( Splide );\r\n  const { state } = Splide;\r\n  const { Move, Scroll, Controller, Elements: { track }, Media: { reduce } } = Components;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { getPosition, exceededLimit } = Move;\r\n\r\n  /**\r\n   * The base slider position to calculate the delta of coords.\r\n   */\r\n  let basePosition: number;\r\n\r\n  /**\r\n   * The base event object saved per specific sampling interval.\r\n   */\r\n  let baseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Holds the previous base event object.\r\n   */\r\n  let prevBaseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Indicates whether the drag mode is `free` or not.\r\n   */\r\n  let isFree: boolean;\r\n\r\n  /**\r\n   * Indicates whether the user is dragging the slider or not.\r\n   */\r\n  let dragging: boolean;\r\n\r\n  /**\r\n   * Indicates whether the slider exceeds limits or not.\r\n   * This must not be `undefined` for strict comparison.\r\n   */\r\n  let exceeded = false;\r\n\r\n  /**\r\n   * Turns into `true` when the user starts dragging the slider.\r\n   */\r\n  let clickPrevented: boolean;\r\n\r\n  /**\r\n   * Indicates whether the drag component is now disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * The target element to attach listeners.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, 'click', onClick, { capture: true } );\r\n    bind( track, 'dragstart', prevent );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { drag } = options;\r\n    disable( ! drag );\r\n    isFree = drag === 'free';\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks or touches the slider.\r\n   * - Needs to prevent the default behaviour when the slider is busy to deny any action, such as dragging images\r\n   * - IE does not support MouseEvent and TouchEvent constructors\r\n   * - The `dragging` state always becomes `true` when the user starts dragging while the slider is moving\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\r\n    clickPrevented = false;\r\n\r\n    if ( ! disabled ) {\r\n      const isTouch = isTouchEvent( e );\r\n\r\n      if ( isDraggable( e.target ) && ( isTouch || ! e.button ) ) {\r\n        if ( ! Controller.isBusy() ) {\r\n          target        = isTouch ? track : window;\r\n          dragging      = state.is( [ MOVING, SCROLLING ] );\r\n          prevBaseEvent = null;\r\n\r\n          bind( target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS );\r\n          bind( target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS );\r\n          Move.cancel();\r\n          Scroll.cancel();\r\n          save( e );\r\n        } else {\r\n          prevent( e, true );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called while the user moves the pointer on the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\r\n    if ( ! state.is( DRAGGING ) ) {\r\n      state.set( DRAGGING );\r\n      emit( EVENT_DRAG );\r\n    }\r\n\r\n    if ( e.cancelable ) {\r\n      if ( dragging ) {\r\n        Move.translate( basePosition + constrain( diffCoord( e ) ) );\r\n\r\n        const expired     = diffTime( e ) > LOG_INTERVAL;\r\n        const hasExceeded = exceeded !== ( exceeded = exceededLimit() );\r\n\r\n        if ( expired || hasExceeded ) {\r\n          save( e );\r\n        }\r\n\r\n        clickPrevented = true;\r\n        emit( EVENT_DRAGGING );\r\n        prevent( e );\r\n      } else if ( isSliderDirection( e ) ) {\r\n        dragging = shouldStart( e );\r\n        prevent( e );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user releases pointing devices.\r\n   * Needs to move the slider when:\r\n   * - The user drags the slider and the distance exceeds the threshold\r\n   * - The user aborted the slider moving by pointerdown and just released it without dragging the slider\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\r\n    if ( state.is( DRAGGING ) ) {\r\n      state.set( IDLE );\r\n      emit( EVENT_DRAGGED );\r\n    }\r\n\r\n    if ( dragging ) {\r\n      move( e );\r\n      prevent( e );\r\n    }\r\n\r\n    unbind( target, POINTER_MOVE_EVENTS, onPointerMove );\r\n    unbind( target, POINTER_UP_EVENTS, onPointerUp );\r\n    dragging = false;\r\n  }\r\n\r\n  /**\r\n   * Called when the track element is clicked.\r\n   * Disables click any elements inside it while dragging.\r\n   *\r\n   * @param e - A MouseEvent object.\r\n   */\r\n  function onClick( e: MouseEvent ): void {\r\n    if ( ! disabled && clickPrevented ) {\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves data at the specific moment.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function save( e: TouchEvent | MouseEvent ): void {\r\n    prevBaseEvent = baseEvent;\r\n    baseEvent     = e;\r\n    basePosition  = getPosition();\r\n  }\r\n\r\n  /**\r\n   * Calculates the destination by the drag velocity and moves the carousel.\r\n   * If motion is reduced, restores transition speed to the initial value\r\n   * because it's \"essential\" motion for the user to recognize what happens on the carousel.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function move( e: TouchEvent | MouseEvent ): void {\r\n    const velocity    = computeVelocity( e );\r\n    const destination = computeDestination( velocity );\r\n    const rewind      = options.rewind && options.rewindByDrag;\r\n\r\n    reduce( false );\r\n\r\n    if ( isFree ) {\r\n      Controller.scroll( destination, 0, options.snap );\r\n    } else if ( Splide.is( FADE ) ) {\r\n      Controller.go( orient( sign( velocity ) ) < 0 ? ( rewind ? '<' : '-' ) : ( rewind ? '>' : '+' ) );\r\n    } else if ( Splide.is( SLIDE ) && exceeded && rewind ) {\r\n      Controller.go( exceededLimit( true ) ? '>' : '<' );\r\n    } else {\r\n      Controller.go( Controller.toDest( destination ), true );\r\n    }\r\n\r\n    reduce( true );\r\n  }\r\n\r\n  /**\r\n   * Checks if the drag distance exceeds the defined threshold.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return `true` if the distance exceeds the threshold, or `false` if not.\r\n   */\r\n  function shouldStart( e: TouchEvent | MouseEvent ): boolean {\r\n    const { dragMinThreshold: thresholds } = options;\r\n    const isObj = isObject( thresholds );\r\n    const mouse = isObj && thresholds.mouse || 0;\r\n    const touch = ( isObj ? thresholds.touch : +thresholds ) || 10;\r\n    return abs( diffCoord( e ) ) > ( isTouchEvent( e ) ? touch : mouse );\r\n  }\r\n\r\n  /**\r\n   * Checks whether dragging towards the slider or the scroll direction.\r\n   *\r\n   * @return `true` if dragging towards the slider direction, or otherwise `false`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function isSliderDirection( e: TouchEvent | MouseEvent ): boolean {\r\n    return abs( diffCoord( e ) ) > abs( diffCoord( e, true ) );\r\n  }\r\n\r\n  /**\r\n   * Computes the drag velocity.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   *\r\n   * @return The drag velocity.\r\n   */\r\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\r\n    if ( Splide.is( LOOP ) || ! exceeded ) {\r\n      const time = diffTime( e );\r\n\r\n      if ( time && time < LOG_INTERVAL ) {\r\n        return diffCoord( e ) / time;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Computes the destination by the velocity and the `flickPower` option.\r\n   *\r\n   * @param velocity - The drag velocity.\r\n   *\r\n   * @return The destination.\r\n   */\r\n  function computeDestination( velocity: number ): number {\r\n    return getPosition() + sign( velocity ) * min(\r\n      abs( velocity ) * ( options.flickPower || 600 ),\r\n      isFree ? Infinity : Components.Layout.listSize() * ( options.flickMaxPages || 1 )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coord difference between the provided and base events.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return The difference of the coord.\r\n   */\r\n  function diffCoord( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return coordOf( e, orthogonal ) - coordOf( getBaseEvent( e ), orthogonal );\r\n  }\r\n\r\n  /**\r\n   * Returns the elapsed time from the base event to `e`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return The elapsed time in milliseconds.\r\n   */\r\n  function diffTime( e: TouchEvent | MouseEvent ): number {\r\n    return timeOf( e ) - timeOf( getBaseEvent( e ) );\r\n  }\r\n\r\n  /**\r\n   * Returns the base event.\r\n   * If the base event is same with `e`, returns previous one.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return A base event.\r\n   */\r\n  function getBaseEvent( e: TouchEvent | MouseEvent ): TouchEvent | MouseEvent {\r\n    return baseEvent === e && prevBaseEvent || baseEvent;\r\n  }\r\n\r\n  /**\r\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\r\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return A pageX or pageY coordinate.\r\n   */\r\n  function coordOf( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return ( isTouchEvent( e ) ? e.changedTouches[ 0 ] : e )[ `page${ resolve( orthogonal ? 'Y' : 'X' ) }` ];\r\n  }\r\n\r\n  /**\r\n   * Reduces the distance to move by the predefined friction.\r\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\r\n   *\r\n   * @param diff - Diff to constrain.\r\n   *\r\n   * @return The constrained diff.\r\n   */\r\n  function constrain( diff: number ): number {\r\n    return diff / ( exceeded && Splide.is( SLIDE ) ? FRICTION : 1 );\r\n  }\r\n\r\n  /**\r\n   * Returns `true` if the user can drag the target.\r\n   *\r\n   * @param target - An event target.\r\n   *\r\n   * @return `true` if the target is draggable.\r\n   */\r\n  function isDraggable( target: EventTarget ): boolean {\r\n    const { noDrag } = options;\r\n\r\n    return ! matches( target, `.${ CLASS_PAGINATION_PAGE }, .${ CLASS_ARROW }` )\r\n      && ( ! noDrag || ! matches( target, noDrag ) );\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided event is TouchEvent or MouseEvent.\r\n   *\r\n   * @param e - An event to check.\r\n   *\r\n   * @return `true` if the `e` is TouchEvent.\r\n   */\r\n  function isTouchEvent( e: TouchEvent | MouseEvent ): e is TouchEvent {\r\n    return typeof TouchEvent !== 'undefined' && e instanceof TouchEvent;\r\n  }\r\n\r\n  /**\r\n   * Checks if now the user is dragging the slider or not.\r\n   *\r\n   * @return `true` if the user is dragging the slider or otherwise `false`.\r\n   */\r\n  function isDragging(): boolean {\r\n    return dragging;\r\n  }\r\n\r\n  /**\r\n   * Disables the component.\r\n   *\r\n   * @param value - Set `true` to disable the component.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    isDragging,\r\n  };\r\n}\r\n","import { CLASS_LOADING } from '../../constants/classes';\r\nimport {\r\n  EVENT_LAZYLOAD_LOADED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZE,\r\n  EVENT_SCROLLED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  child,\r\n  create,\r\n  display,\r\n  empty,\r\n  getAttribute,\r\n  queryAll,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the LazyLoad component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LazyLoadComponent extends BaseComponent {\r\n  /** @internal */\r\n  check(): void;\r\n}\r\n\r\n/**\r\n * The type for each entry.\r\n * Use a tuple for better compression.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype LazyLoadEntry = [ HTMLImageElement, SlideComponent, HTMLSpanElement ];\r\n\r\n/**\r\n * The component for lazily loading images.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An LazyLoad component object.\r\n */\r\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\r\n  const { on, off, bind, emit } = EventInterface( Splide );\r\n  const isSequential = options.lazyLoad === 'sequential';\r\n  const events       = [ EVENT_MOVED, EVENT_SCROLLED ];\r\n\r\n  /**\r\n   * Stores data of images.\r\n   */\r\n  let entries: LazyLoadEntry[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.lazyLoad ) {\r\n      init();\r\n      on( EVENT_REFRESH, init );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the component and start loading images.\r\n   * Be aware that `refresh` also calls this method.\r\n   */\r\n  function init() {\r\n    empty( entries );\r\n    register();\r\n\r\n    if ( isSequential ) {\r\n      loadNext();\r\n    } else {\r\n      off( events );\r\n      on( events, check );\r\n      check();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds images and register them as entries with creating spinner elements.\r\n   * Note that spinner can be already available because of `refresh()`.\r\n   */\r\n  function register(): void {\r\n    Components.Slides.forEach( Slide => {\r\n      queryAll<HTMLImageElement>( Slide.slide, IMAGE_SELECTOR ).forEach( img => {\r\n        const src    = getAttribute( img, SRC_DATA_ATTRIBUTE );\r\n        const srcset = getAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n\r\n        if ( src !== img.src || srcset !== img.srcset ) {\r\n          const className = options.classes.spinner;\r\n          const parent    = img.parentElement;\r\n          const spinner   = child( parent, `.${ className }` ) || create( 'span', className, parent );\r\n\r\n          entries.push( [ img, Slide, spinner ] );\r\n          img.src || display( img, 'none' );\r\n        }\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\r\n   * The last `+1` is for the current page.\r\n   */\r\n  function check(): void {\r\n    entries = entries.filter( data => {\r\n      const distance = options.perPage * ( ( options.preloadPages || 1 ) + 1 ) - 1;\r\n      return data[ 1 ].isWithin( Splide.index, distance ) ? load( data ) : true;\r\n    } );\r\n\r\n    entries.length || off( events );\r\n  }\r\n\r\n  /**\r\n   * Starts loading the image in the provided data.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   */\r\n  function load( data: LazyLoadEntry ): void {\r\n    const [ img ] = data;\r\n\r\n    addClass( data[ 1 ].slide, CLASS_LOADING );\r\n    bind( img, 'load error', apply( onLoad, data ) );\r\n\r\n    setAttribute( img, 'src', getAttribute( img, SRC_DATA_ATTRIBUTE ) );\r\n    setAttribute( img, 'srcset', getAttribute( img, SRCSET_DATA_ATTRIBUTE ) );\r\n    removeAttribute( img, SRC_DATA_ATTRIBUTE );\r\n    removeAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n  }\r\n\r\n  /**\r\n   * Called when the image is loaded or any error occurs.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   * @param e    - An Event object.\r\n   */\r\n  function onLoad( data: LazyLoadEntry, e: Event ): void {\r\n    const [ img, Slide ] = data;\r\n\r\n    removeClass( Slide.slide, CLASS_LOADING );\r\n\r\n    if ( e.type !== 'error' ) {\r\n      remove( data[ 2 ] );\r\n      display( img, '' );\r\n      emit( EVENT_LAZYLOAD_LOADED, img, Slide );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n\r\n    isSequential && loadNext();\r\n  }\r\n\r\n  /**\r\n   * Starts loading a next image.\r\n   */\r\n  function loadNext(): void {\r\n    entries.length && load( entries.shift() );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( empty, entries ),\r\n    check,\r\n  };\r\n}\r\n","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport {\r\n  ARIA_CONTROLS,\r\n  ARIA_LABEL,\r\n  ARIA_ORIENTATION,\r\n  ARIA_SELECTED,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport { CLASS_ACTIVE, CLASS_PAGINATION } from '../../constants/classes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_END_INDEX_CHANGED,\r\n  EVENT_MOVE,\r\n  EVENT_PAGINATION_MOUNTED,\r\n  EVENT_PAGINATION_UPDATED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  ceil,\r\n  create,\r\n  display,\r\n  empty,\r\n  focus,\r\n  format,\r\n  prevent,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  slice,\r\n} from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Pagination component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationComponent extends BaseComponent {\r\n  items: PaginationItem[];\r\n  getAt( index: number ): PaginationItem;\r\n  update(): void;\r\n}\r\n\r\n/**\r\n * The interface for data of the pagination.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationData {\r\n  list: HTMLUListElement;\r\n  items: PaginationItem[];\r\n}\r\n\r\n/**\r\n * The interface for each pagination item.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationItem {\r\n  li: HTMLLIElement;\r\n  button: HTMLButtonElement;\r\n  page: number;\r\n}\r\n\r\n/**\r\n * The component for the pagination UI (a slide picker).\r\n *\r\n * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#grouped-carousel-elements\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Pagination component object.\r\n */\r\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Slides, Elements, Controller } = Components;\r\n  const { hasFocus, getIndex, go } = Controller;\r\n  const { resolve } = Components.Direction;\r\n  const { pagination: placeholder } = Elements;\r\n\r\n  /**\r\n   * Stores all pagination items.\r\n   */\r\n  const items: PaginationItem[] = [];\r\n\r\n  /**\r\n   * The pagination element.\r\n   */\r\n  let list: HTMLUListElement | null;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let paginationClasses: string;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    destroy();\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED ], mount );\r\n\r\n    const enabled = options.pagination;\r\n    placeholder && display( placeholder, enabled ? '' : 'none' );\r\n\r\n    if ( enabled ) {\r\n      on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED ], update );\r\n      createPagination();\r\n      update();\r\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    if ( list ) {\r\n      remove( placeholder ? slice( list.children ) : list );\r\n      removeClass( list, paginationClasses );\r\n      empty( items );\r\n      list = null;\r\n    }\r\n\r\n    event.destroy();\r\n  }\r\n\r\n  /**\r\n   * Creates the pagination element and appends it to the slider.\r\n   */\r\n  function createPagination(): void {\r\n    const { length } = Splide;\r\n    const { classes, i18n, perPage } = options;\r\n    const max = hasFocus() ? Controller.getEnd() + 1 : ceil( length / perPage );\r\n\r\n    list = placeholder || create( 'ul', classes.pagination, Elements.track.parentElement );\r\n\r\n    addClass( list, ( paginationClasses = `${ CLASS_PAGINATION }--${ getDirection() }` ) );\r\n    setAttribute( list, ROLE, 'tablist' );\r\n    setAttribute( list, ARIA_LABEL, i18n.select );\r\n    setAttribute( list, ARIA_ORIENTATION, getDirection() === TTB ? 'vertical' : '' );\r\n\r\n    for ( let i = 0; i < max; i++ ) {\r\n      const li       = create( 'li', null, list );\r\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\r\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\r\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\r\n\r\n      bind( button, 'click', apply( onClick, i ) );\r\n\r\n      if ( options.paginationKeyboard ) {\r\n        bind( button, 'keydown', apply( onKeydown, i ) );\r\n      }\r\n\r\n      setAttribute( li, ROLE, 'presentation' );\r\n      setAttribute( button, ROLE, 'tab' );\r\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\r\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n\r\n      items.push( { li, button, page: i } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks each pagination dot.\r\n   * Moves the focus to the active slide for accessibility.\r\n   *\r\n   * @link https://www.w3.org/WAI/tutorials/carousels/functionality/\r\n   *\r\n   * @param page - A clicked page index.\r\n   */\r\n  function onClick( page: number ): void {\r\n    go( `>${ page }`, true );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the pagination.\r\n   *\r\n   * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#keyboard-interaction-21\r\n   *\r\n   * @param page - A page index.\r\n   * @param e    - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( page: number, e: KeyboardEvent ): void {\r\n    const { length } = items;\r\n    const key = normalizeKey( e );\r\n    const dir = getDirection();\r\n\r\n    let nextPage = -1;\r\n\r\n    if ( key === resolve( ARROW_RIGHT, false, dir ) ) {\r\n      nextPage = ++page % length;\r\n    } else if ( key === resolve( ARROW_LEFT, false, dir ) ) {\r\n      nextPage = ( --page + length ) % length;\r\n    } else if ( key === 'Home' ) {\r\n      nextPage = 0;\r\n    } else if ( key === 'End' ) {\r\n      nextPage = length - 1;\r\n    }\r\n\r\n    const item = items[ nextPage ];\r\n\r\n    if ( item ) {\r\n      focus( item.button );\r\n      go( `>${ nextPage }` );\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the latest direction for pagination.\r\n   */\r\n  function getDirection(): Options['direction'] {\r\n    return options.paginationDirection || options.direction;\r\n  }\r\n\r\n  /**\r\n   * Returns the pagination item at the specified index.\r\n   *\r\n   * @param index - An index.\r\n   *\r\n   * @return A pagination item object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): PaginationItem | undefined {\r\n    return items[ Controller.toPage( index ) ];\r\n  }\r\n\r\n  /**\r\n   * Updates the pagination status.\r\n   */\r\n  function update(): void {\r\n    const prev = getAt( getIndex( true ) );\r\n    const curr = getAt( getIndex() );\r\n\r\n    if ( prev ) {\r\n      const { button } = prev;\r\n      removeClass( button, CLASS_ACTIVE );\r\n      removeAttribute( button, ARIA_SELECTED );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n    }\r\n\r\n    if ( curr ) {\r\n      const { button } = curr;\r\n      addClass( button, CLASS_ACTIVE );\r\n      setAttribute( button, ARIA_SELECTED, true );\r\n      setAttribute( button, TAB_INDEX, '' );\r\n    }\r\n\r\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\r\n  }\r\n\r\n  return {\r\n    items,\r\n    mount,\r\n    destroy,\r\n    getAt,\r\n    update,\r\n  };\r\n}\r\n","import { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { MOVING } from '../../constants/states';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, prevent, timeOf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Wheel component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface WheelComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\r\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\r\n  const { bind } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Holds the last time when the wheel moves the slider.\r\n   */\r\n  let lastTime = 0;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.wheel ) {\r\n      bind( Components.Elements.track, 'wheel', onWheel, SCROLL_LISTENER_OPTIONS );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user rotates the mouse wheel on the slider.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\r\n  function onWheel( e: WheelEvent ): void {\r\n    if ( e.cancelable ) {\r\n      const { deltaY } = e;\r\n      const backwards = deltaY < 0;\r\n      const timeStamp = timeOf( e );\r\n      const min       = options.wheelMinThreshold || 0;\r\n      const sleep     = options.wheelSleep || 0;\r\n\r\n      if ( abs( deltaY ) > min && timeStamp - lastTime > sleep ) {\r\n        Splide.go( backwards ? '<' : '>' );\r\n        lastTime = timeStamp;\r\n      }\r\n\r\n      shouldPrevent( backwards ) && prevent( e );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether the component should prevent the default action of the wheel event or not.\r\n   *\r\n   * @param backwards - Set this to `true` for backwards direction.\r\n   *\r\n   * @return `true` if the action should be prevented.\r\n   */\r\n  function shouldPrevent( backwards: boolean ): boolean {\r\n    return ! options.releaseWheel\r\n      || Splide.state.is( MOVING )\r\n      || Components.Controller.getAdjacent( backwards ) !== -1;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n  };\r\n}\r\n","import { ARIA_ATOMIC, ARIA_BUSY, ARIA_LIVE } from '../../constants/attributes';\r\nimport { CLASS_SR } from '../../constants/classes';\r\nimport { EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_MOVED, EVENT_SCROLLED } from '../../constants/events';\r\nimport { EventInterface, RequestInterval } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { append, apply, create, remove, removeAttribute, setAttribute } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Live component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface LiveComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * Delay in milliseconds before removing the SR field for Windows Narrator.\r\n */\r\nconst SR_REMOVAL_DELAY = 90;\r\n\r\n/**\r\n * The component for implementing Live Region to the slider.\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Live component object.\r\n */\r\nexport function Live( Splide: Splide, Components: Components, options: Options ): LiveComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { track } = Components.Elements;\r\n\r\n  /**\r\n   * Indicates whether the live region is enabled or not.\r\n   */\r\n  const enabled = options.live && ! options.isNavigation;\r\n\r\n  /**\r\n   * The span element for the SR only text.\r\n   */\r\n  const sr = create( 'span', CLASS_SR );\r\n\r\n  /**\r\n   * Holds the RequestInterval instance.\r\n   */\r\n  const interval = RequestInterval( SR_REMOVAL_DELAY, apply( toggle, false ) );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * - JAWS needs `aria-atomic` to make the `aria-busy` work.\r\n   * - Immediately removing the SR makes Windows Narrator silent, hence requires the delay around 50ms.\r\n   */\r\n  function mount(): void {\r\n    if ( enabled ) {\r\n      disable( ! Components.Autoplay.isPaused() );\r\n      setAttribute( track, ARIA_ATOMIC, true );\r\n      sr.textContent = '…';\r\n\r\n      on( EVENT_AUTOPLAY_PLAY, apply( disable, true ) );\r\n      on( EVENT_AUTOPLAY_PAUSE, apply( disable, false ) );\r\n      on( [ EVENT_MOVED, EVENT_SCROLLED ], apply( toggle, true ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the SR field and `aria-busy`.\r\n   *\r\n   * @param active - Determines whether to activate the field or not.\r\n   */\r\n  function toggle( active: boolean ): void {\r\n    setAttribute( track, ARIA_BUSY, active );\r\n\r\n    if ( active ) {\r\n      append( track, sr );\r\n      interval.start();\r\n    } else {\r\n      remove( sr );\r\n      interval.cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    removeAttribute( track, [ ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY ] );\r\n    remove( sr );\r\n  }\r\n\r\n  /**\r\n   * Disables/enables the live region.\r\n   * Does nothing when the `live` option is not enabled.\r\n   *\r\n   * @param disabled - `true` to disable the live region or `false` to enable it again.\r\n   */\r\n  function disable( disabled: boolean ): void {\r\n    if ( enabled ) {\r\n      setAttribute( track, ARIA_LIVE, disabled ? 'off' : 'polite' );\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    destroy,\r\n  };\r\n}","import { Options } from '../types';\r\nimport { CLASSES } from './classes';\r\nimport { I18N } from './i18n';\r\n\r\n\r\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULTS: Options = {\r\n  type              : 'slide',\r\n  role              : 'region',\r\n  speed             : 400,\r\n  perPage           : 1,\r\n  cloneStatus       : true,\r\n  arrows            : true,\r\n  pagination        : true,\r\n  paginationKeyboard: true,\r\n  interval          : 5000,\r\n  pauseOnHover      : true,\r\n  pauseOnFocus      : true,\r\n  resetProgress     : true,\r\n  easing            : 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  drag              : true,\r\n  direction         : 'ltr',\r\n  trimSpace         : true,\r\n  focusableNodes    : 'a, button, textarea, input, select, iframe',\r\n  live              : true,\r\n  classes           : CLASSES,\r\n  i18n              : I18N,\r\n  reducedMotion: {\r\n    speed      : 0,\r\n    rewindSpeed: 0,\r\n    autoplay   : 'pause',\r\n  },\r\n};","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const I18N = {\r\n  prev      : 'Previous slide',\r\n  next      : 'Next slide',\r\n  first     : 'Go to first slide',\r\n  last      : 'Go to last slide',\r\n  slideX    : 'Go to slide %s',\r\n  pageX     : 'Go to page %s',\r\n  play      : 'Start autoplay',\r\n  pause     : 'Pause autoplay',\r\n  carousel  : 'carousel',\r\n  slide     : 'slide',\r\n  select    : 'Select a slide to show',\r\n  slideLabel: '%s of %s', // [ slide number ] / [ slide size ]\r\n};\r\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { nextTick, noop } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the fade transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { Slides } = Components;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    EventInterface( Splide ).on( [ EVENT_MOUNTED, EVENT_REFRESH ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   * Offsets all slides for stacking them onto the head of the list.\r\n   * The `nextTick` disables the initial fade transition of the first slide.\r\n   */\r\n  function init(): void {\r\n    Slides.forEach( Slide => {\r\n      Slide.style( 'transform', `translateX(-${ 100 * Slide.index }%)` );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   *\r\n   * @param index - A slide index to be active.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    Slides.style( 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\r\n    nextTick( done );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel: noop,\r\n  };\r\n}\r\n","import { SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, apply, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the slide transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { Move, Controller, Scroll } = Components;\r\n  const { list } = Components.Elements;\r\n  const transition = apply( style, list, 'transition' );\r\n\r\n  /**\r\n   * Holds the `done` callback function.\r\n   */\r\n  let endCallback: () => void;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    EventInterface( Splide ).bind( list, 'transitionend', e => {\r\n      if ( e.target === list && endCallback ) {\r\n        cancel();\r\n        endCallback();\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * The Move component calls this method just before the slider moves.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const destination = Move.toPosition( index, true );\r\n    const position    = Move.getPosition();\r\n    const speed       = getSpeed( index );\r\n\r\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\r\n      if ( options.useScroll ) {\r\n        Scroll.scroll( destination, speed, false, done );\r\n      } else {\r\n        transition( `transform ${ speed }ms ${ options.easing }` );\r\n        Move.translate( destination, true );\r\n        endCallback = done;\r\n      }\r\n    } else {\r\n      Move.jump( index );\r\n      done();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the transition.\r\n   */\r\n  function cancel(): void {\r\n    transition( '' );\r\n    Scroll.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the transition speed.\r\n   *\r\n   * @param index - A destination index.\r\n   */\r\n  function getSpeed( index: number ): number {\r\n    const { rewindSpeed } = options;\r\n\r\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\r\n      const prev = Controller.getIndex( true );\r\n      const end  = Controller.getEnd();\r\n\r\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\r\n        return rewindSpeed;\r\n      }\r\n    }\r\n\r\n    return options.speed;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel,\r\n  };\r\n}\r\n","import * as ComponentConstructors from '../../components';\r\nimport { SlideMatcher } from '../../components/Slides/Slides';\r\nimport { CLASS_INITIALIZED } from '../../constants/classes';\r\nimport { DEFAULTS } from '../../constants/defaults';\r\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH } from '../../constants/events';\r\nimport { DATA_ATTRIBUTE } from '../../constants/project';\r\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\r\nimport { FADE } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject, State, StateObject } from '../../constructors';\r\nimport { Fade, Slide } from '../../transitions';\r\nimport { AnyFunction, ComponentConstructor, Components, EventMap, Options, SyncTarget } from '../../types';\r\nimport { addClass, assert, assign, empty, forOwn, getAttribute, isString, merge, query, slice } from '../../utils';\r\nimport { ARIA_LABEL, ARIA_LABELLEDBY } from '../../constants/attributes';\r\n\r\n\r\n/**\r\n * The frontend class for the Splide slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class Splide {\r\n  /**\r\n   * Changes the default options for all Splide instances.\r\n   */\r\n  static defaults: Options = {};\r\n\r\n  /**\r\n   * The collection of state numbers.\r\n   */\r\n  static readonly STATES = STATES;\r\n\r\n  /**\r\n   * The root element where the Splide is applied.\r\n   */\r\n  readonly root: HTMLElement;\r\n\r\n  /**\r\n   * The EventBusObject object.\r\n   */\r\n  readonly event: EventInterfaceObject = EventInterface();\r\n\r\n  /**\r\n   * The collection of all component objects.\r\n   */\r\n  readonly Components: Components = {} as Components;\r\n\r\n  /**\r\n   * The StateObject object.\r\n   */\r\n  readonly state: StateObject = State( CREATED );\r\n\r\n  /**\r\n   * An array with SyncTarget objects for splide instances to sync with.\r\n   */\r\n  readonly splides: SyncTarget[] = [];\r\n\r\n  /**\r\n   * The current options.\r\n   */\r\n  private readonly _o: Options = {};\r\n\r\n  /**\r\n   * The collection of all components.\r\n   */\r\n  private _C: Components;\r\n\r\n  /**\r\n   * The collection of extensions.\r\n   */\r\n  private _E: Record<string, ComponentConstructor> = {};\r\n\r\n  /**\r\n   * The Transition component.\r\n   */\r\n  private _T: ComponentConstructor;\r\n\r\n  /**\r\n   * The Splide constructor.\r\n   *\r\n   * @param target  - The selector for the target element, or the element itself.\r\n   * @param options - Optional. An object with options.\r\n   */\r\n  constructor( target: string | HTMLElement, options?: Options ) {\r\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\r\n    assert( root, `${ root } is invalid.` );\r\n\r\n    this.root = root;\r\n\r\n    options = merge( {\r\n      label     : getAttribute( root, ARIA_LABEL ) || '',\r\n      labelledby: getAttribute( root, ARIA_LABELLEDBY ) || '',\r\n    }, DEFAULTS, Splide.defaults, options || {} );\r\n\r\n    try {\r\n      merge( options, JSON.parse( getAttribute( root, DATA_ATTRIBUTE ) ) );\r\n    } catch ( e ) {\r\n      assert( false, 'Invalid JSON' );\r\n    }\r\n\r\n    this._o = Object.create( merge( {}, options ) );\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   *\r\n   * @param Extensions - Optional. An object with extensions.\r\n   * @param Transition - Optional. A Transition component.\r\n   *\r\n   * @return `this`\r\n   */\r\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\r\n    const { state, Components } = this;\r\n    assert( state.is( [ CREATED, DESTROYED ] ), 'Already mounted!' );\r\n\r\n    state.set( CREATED );\r\n\r\n    this._C = Components;\r\n    this._T = Transition || this._T || ( this.is( FADE ) ? Fade : Slide );\r\n    this._E = Extensions || this._E;\r\n\r\n    const Constructors = assign( {}, ComponentConstructors, this._E, { Transition: this._T } );\r\n\r\n    forOwn( Constructors, ( Component, key ) => {\r\n      const component = Component( this, Components, this._o );\r\n      Components[ key ] = component;\r\n      component.setup && component.setup();\r\n    } );\r\n\r\n    forOwn( Components, component => {\r\n      component.mount && component.mount();\r\n    } );\r\n\r\n    this.emit( EVENT_MOUNTED );\r\n\r\n    addClass( this.root, CLASS_INITIALIZED );\r\n\r\n    state.set( IDLE );\r\n    this.emit( EVENT_READY );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Syncs the slider with the provided one.\r\n   * This method must be called before the `mount()`.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var primary   = new Splide();\r\n   * var secondary = new Splide();\r\n   *\r\n   * primary.sync( secondary );\r\n   * primary.mount();\r\n   * secondary.mount();\r\n   * ```\r\n   *\r\n   * @param splide - A Splide instance to sync with.\r\n   *\r\n   * @return `this`\r\n   */\r\n  sync( splide: Splide ): this {\r\n    this.splides.push( { splide } );\r\n    splide.splides.push( { splide: this, isParent: true } );\r\n\r\n    if ( this.state.is( IDLE ) ) {\r\n      this._C.Sync.remount();\r\n      splide.Components.Sync.remount();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Moves the slider with the following control pattern.\r\n   *\r\n   * | Pattern | Description |\r\n   * |---|---|\r\n   * | `i` | Goes to the slide `i` |\r\n   * | `'+${i}'` | Increments the slide index by `i` |\r\n   * | `'-${i}'` | Decrements the slide index by `i` |\r\n   * | `'>'` | Goes to the next page |\r\n   * | `'<'` | Goes to the previous page |\r\n   * | `>${i}` | Goes to the page `i` |\r\n   *\r\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\r\n   * because they respect `perPage` and `perMove` options.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Goes to the slide 1:\r\n   * splide.go( 1 );\r\n   *\r\n   * // Increments the index:\r\n   * splide.go( '+2' );\r\n   *\r\n   * // Goes to the next page:\r\n   * splide.go( '>' );\r\n   *\r\n   * // Goes to the page 2:\r\n   * splide.go( '>2' );\r\n   * ```\r\n   *\r\n   * @param control - A control pattern.\r\n   *\r\n   * @return `this`\r\n   */\r\n  go( control: number | string ): this {\r\n    this._C.Controller.go( control );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Listens to a single event:\r\n   * splide.on( 'move', function() {} );\r\n   *\r\n   * // Listens to multiple events:\r\n   * splide.on( 'move resize', function() {} );\r\n   *\r\n   * // Appends a namespace:\r\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\r\n   * ```\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   * @param callback - A callback function.\r\n   *\r\n   * @return `this`\r\n   */\r\n  on<K extends keyof EventMap>( events: K, callback: EventMap[ K ] ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this {\r\n    this.event.on( events, callback );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the registered all handlers for the specified event or events.\r\n   * If you want to only remove a particular handler, use namespace to identify it.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Removes all handlers assigned to \"move\":\r\n   * splide.off( 'move' );\r\n   *\r\n   * // Only removes handlers that belong to the specified namespace:\r\n   * splide.off( 'move.myNamespace' );\r\n   * ```\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   *\r\n   * @return `this`\r\n   */\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): this {\r\n    this.event.off( events );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Emits an event and triggers registered handlers.\r\n   *\r\n   * @param event - An event name to emit.\r\n   * @param args  - Optional. Any number of arguments to pass to handlers.\r\n   *\r\n   * @return `this`\r\n   */\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): this;\r\n  emit( event: string, ...args: any[] ): this;\r\n  emit( event: string ): this {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    this.event.emit( event, ...slice( arguments, 1 ) );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide at the specified position.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   * splide.mount();\r\n   *\r\n   * // Adds the slide by the HTML:\r\n   * splide.add( '<li></li> );\r\n   *\r\n   * // or adds the element:\r\n   * splide.add( document.createElement( 'li' ) );\r\n   * ```\r\n   *\r\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\r\n   * @param index  - Optional. An index to insert a slide at.\r\n   *\r\n   * @return `this`\r\n   */\r\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\r\n    this._C.Slides.add( slides, index );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  remove( matcher: SlideMatcher ): this {\r\n    this._C.Slides.remove( matcher );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Checks the slider type.\r\n   *\r\n   * @param type - A type to test.\r\n   *\r\n   * @return `true` if the type matches the current one, or otherwise `false`.\r\n   */\r\n  is( type: string ): boolean {\r\n    return this._o.type === type;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the slider.\r\n   *\r\n   * @return `this`\r\n   */\r\n  refresh(): this {\r\n    this.emit( EVENT_REFRESH );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider.\r\n   *\r\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\r\n   *\r\n   * @return `this`\r\n   */\r\n  destroy( completely = true ): this {\r\n    const { event, state } = this;\r\n\r\n    if ( state.is( CREATED ) ) {\r\n      // Postpones destruction requested before the slider becomes ready.\r\n      EventInterface( this ).on( EVENT_READY, this.destroy.bind( this, completely ) );\r\n    } else {\r\n      forOwn( this._C, component => {\r\n        component.destroy && component.destroy( completely );\r\n      }, true );\r\n\r\n      event.emit( EVENT_DESTROY );\r\n      event.destroy();\r\n      completely && empty( this.splides );\r\n      state.set( DESTROYED );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns options.\r\n   *\r\n   * @return An object with the latest options.\r\n   */\r\n  get options(): Options {\r\n    return this._o;\r\n  }\r\n\r\n  /**\r\n   * Merges options to the current options and emits `updated` event.\r\n   *\r\n   * @param options - An object with new options.\r\n   */\r\n  set options( options: Options ) {\r\n    this._C.Media.set( options, true, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the number of slides without clones.\r\n   *\r\n   * @return The number of slides.\r\n   */\r\n  get length(): number {\r\n    return this._C.Slides.getLength( true );\r\n  }\r\n\r\n  /**\r\n   * Returns the active slide index.\r\n   *\r\n   * @return The active slide index.\r\n   */\r\n  get index(): number {\r\n    return this._C.Controller.getIndex();\r\n  }\r\n}\r\n","// Avoid `console` errors in browsers that lack a console.\n(function() {\n  var method;\n  var noop = function () {};\n  var methods = [\n    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n    'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n  ];\n  var length = methods.length;\n  var console = (window.console = window.console || {});\n\n  while (length--) {\n    method = methods[length];\n\n    // Only stub undefined methods.\n    if (!console[method]) {\n      console[method] = noop;\n    }\n  }\n}());\n\n// Place any jQuery/helper plugins in here.\nimport AOS from 'aos/dist/aos.js';\nAOS.init();\n\n// Splide JS.\nimport Splide from '@splidejs/splide/dist/js/splide.min.js';\nnew Splide('.splide').mount();\n\n"]}